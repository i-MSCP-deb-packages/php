009_ob-memory-leaks.patch
PHP_5_2
http://cvs.php.net/viewvc.cgi/php-src/main/output.c?r1=1.167.2.3.2.8&r2=1.167.2.3.2.9&diff_format=u
Fixed memory leak in ob_get_clean/ob_get_flush.

---
 main/output.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/main/output.c
+++ b/main/output.c
@@ -820,11 +820,13 @@ PHP_FUNCTION(ob_clean)
 
 	if (!OG(ob_nesting_level)) {
 		php_error_docref("ref.outcontrol" TSRMLS_CC, E_NOTICE, "failed to delete buffer. No buffer to delete");
+		zval_dtor(return_value);
 		RETURN_FALSE;
 	}
 
 	if (!OG(active_ob_buffer).status && !OG(active_ob_buffer).erase) {
 		php_error_docref("ref.outcontrol" TSRMLS_CC, E_NOTICE, "failed to delete buffer %s", OG(active_ob_buffer).handler_name);
+		zval_dtor(return_value);
 		RETURN_FALSE;
 	}
 
@@ -843,11 +845,13 @@ PHP_FUNCTION(ob_end_flush)
 
 	if (!OG(ob_nesting_level)) {
 		php_error_docref("ref.outcontrol" TSRMLS_CC, E_NOTICE, "failed to delete and flush buffer. No buffer to delete or flush");
+		zval_dtor(return_value);
 		RETURN_FALSE;
 	}
 
 	if (OG(ob_nesting_level) && !OG(active_ob_buffer).status && !OG(active_ob_buffer).erase) {
 		php_error_docref("ref.outcontrol" TSRMLS_CC, E_NOTICE, "failed to delete buffer %s", OG(active_ob_buffer).handler_name);
+		zval_dtor(return_value);
 		RETURN_FALSE;
 	}
 
