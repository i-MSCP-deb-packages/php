Backport of:

From 97eff7eb57fc2320c267a949cffd622c38712484 Mon Sep 17 00:00:00 2001
From: Stanislav Malyshev <stas@php.net>
Date: Sun, 22 May 2016 17:49:02 -0700
Subject: [PATCH] Fix bug #72241: get_icu_value_internal out-of-bounds read

---
 ext/intl/locale/locale_methods.c |    1 +
 ext/intl/tests/bug72241.phpt     |   15 +++++++++++++++
 2 files changed, 16 insertions(+)
 create mode 100644 ext/intl/tests/bug72241.phpt

--- a/ext/intl/locale/locale_methods.c
+++ b/ext/intl/locale/locale_methods.c
@@ -326,6 +326,7 @@ static char* get_icu_value_internal( cha
 		if( U_FAILURE( status ) ) {
 			if( status == U_BUFFER_OVERFLOW_ERROR ) {
 				status = U_ZERO_ERROR;
+				buflen++; /* add space for \0 */
 				continue;
 			}
 
--- /dev/null
+++ b/ext/intl/tests/bug72241.phpt
@@ -0,0 +1,15 @@
+--TEST--
+Bug #72241: get_icu_value_internal out-of-bounds read
+--SKIPIF--
+<?php if( !extension_loaded( 'intl' ) ) print 'skip'; ?>
+--FILE--
+<?php
+$var1=str_repeat("A", 1000);
+$out = locale_get_primary_language($var1);
+echo strlen($out) . PHP_EOL;
+$result = unpack('H*', $out);
+echo $result[1] . PHP_EOL;
+--EXPECT--
+1000

+
