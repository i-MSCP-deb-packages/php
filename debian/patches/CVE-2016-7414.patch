From 223266e4e46b9188353db93771369078c2e94353 Mon Sep 17 00:00:00 2001
From: Stanislav Malyshev <stas@php.net>
Date: Sun, 4 Sep 2016 22:07:35 -0700
Subject: [PATCH] Fix bug #72928 - Out of bound when verify signature of zip
 phar in phar_parse_zipfile

---
 ext/phar/tests/bug72928.phpt |  18 ++++++++++++++++++
 ext/phar/tests/bug72928.zip  | Bin 0 -> 140 bytes
 ext/phar/util.c |   28 ++++++++++++++++++++++++++++
 ext/phar/zip.c  |    2 +-
 2 files changed, 29 insertions(+), 1 deletion(-)
 create mode 100644 ext/phar/tests/bug72928.phpt
 create mode 100644 ext/phar/tests/bug72928.zip

--- a/ext/phar/util.c
+++ b/ext/phar/util.c
@@ -1927,6 +1927,13 @@ int phar_verify_signature(php_stream *fp
 			unsigned char digest[64];
 			PHP_SHA512_CTX context;
 
+			if (sig_len < sizeof(digest)) {
+				if (error) {
+					spprintf(error, 0, "broken signature");
+				}
+				return FAILURE;
+			}
+
 			PHP_SHA512Init(&context);
 			read_len = end_of_phar;
 
@@ -1960,6 +1967,13 @@ int phar_verify_signature(php_stream *fp
 			unsigned char digest[32];
 			PHP_SHA256_CTX context;
 
+			if (sig_len < sizeof(digest)) {
+				if (error) {
+					spprintf(error, 0, "broken signature");
+				}
+				return FAILURE;
+			}
+
 			PHP_SHA256Init(&context);
 			read_len = end_of_phar;
 
@@ -2001,6 +2015,13 @@ int phar_verify_signature(php_stream *fp
 			unsigned char digest[20];
 			PHP_SHA1_CTX  context;
 
+			if (sig_len < sizeof(digest)) {
+				if (error) {
+					spprintf(error, 0, "broken signature");
+				}
+				return FAILURE;
+			}
+
 			PHP_SHA1Init(&context);
 			read_len = end_of_phar;
 
@@ -2034,6 +2055,13 @@ int phar_verify_signature(php_stream *fp
 			unsigned char digest[16];
 			PHP_MD5_CTX   context;
 
+			if (sig_len < sizeof(digest)) {
+				if (error) {
+					spprintf(error, 0, "broken signature");
+				}
+				return FAILURE;
+			}
+
 			PHP_MD5Init(&context);
 			read_len = end_of_phar;
 
--- a/ext/phar/zip.c
+++ b/ext/phar/zip.c
@@ -430,7 +430,7 @@ foundit:
 			php_stream_seek(fp, sizeof(phar_zip_file_header) + entry.header_offset + entry.filename_len + PHAR_GET_16(zipentry.extra_len), SEEK_SET);
 			sig = (char *) emalloc(entry.uncompressed_filesize);
 			read = php_stream_read(fp, sig, entry.uncompressed_filesize);
-			if (read != entry.uncompressed_filesize) {
+			if (read != entry.uncompressed_filesize || read <= 8) {
 				php_stream_close(sigfile);
 				efree(sig);
 				PHAR_ZIP_FAIL("signature cannot be read");
