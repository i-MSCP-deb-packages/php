Description: fix more missing file path null byte checks
Origin: backport, http://git.php.net/?p=php-src.git;a=commit;h=be9b2a95adb504abd5acdc092d770444ad6f6854
Bug: https://bugs.php.net/bug.php?id=69418

---
 ext/pcntl/pcntl.c  |   11 ++++++++---
 ext/standard/dir.c |   12 +++++++++++-
 2 files changed, 19 insertions(+), 4 deletions(-)

--- a/ext/pcntl/pcntl.c
+++ b/ext/pcntl/pcntl.c
@@ -754,16 +754,21 @@ PHP_FUNCTION(pcntl_exec)
 	char *path;
 	int path_len;
 	ulong key_num;
-		
+
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s|aa", &path, &path_len, &args, &envs) == FAILURE) {
 		return;
 	}
-	
+
+	/* No nulls allowed in paths */
+	if(strlen(path) != path_len) {
+		RETURN_FALSE;
+	}
+
 	if (ZEND_NUM_ARGS() > 1) {
 		/* Build argument list */
 		args_hash = HASH_OF(args);
 		argc = zend_hash_num_elements(args_hash);
-		
+
 		argv = safe_emalloc((argc + 2), sizeof(char *), 0);
 		*argv = path;
 		for ( zend_hash_internal_pointer_reset(args_hash), current_arg = argv+1; 
--- a/ext/standard/dir.c
+++ b/ext/standard/dir.c
@@ -219,6 +219,11 @@ static void _php_do_opendir(INTERNAL_FUN
 		RETURN_NULL();
 	}
 
+	/* No nulls allowed in paths */
+	if (strlen(dirname) != dir_len) {
+		RETURN_FALSE;
+	}
+
 	context = php_stream_context_from_zval(zcontext, 0);
 	
 	dirp = php_stream_opendir(dirname, ENFORCE_SAFE_MODE|REPORT_ERRORS, context);
@@ -293,7 +298,12 @@ PHP_FUNCTION(chroot)
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s", &str, &str_len) == FAILURE) {
 		RETURN_FALSE;
 	}
-	
+
+	/* No nulls allowed in paths */
+	if (strlen(str) != str_len) {
+		RETURN_FALSE;
+	}
+
 	ret = chroot(str);
 	if (ret != 0) {
 		php_error_docref(NULL TSRMLS_CC, E_WARNING, "%s (errno %d)", strerror(errno), errno);
