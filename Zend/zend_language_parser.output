Terminals unused in grammar

   "comment (T_COMMENT)"
   "doc comment (T_DOC_COMMENT)"
   "open tag (T_OPEN_TAG)"
   "open tag with echo (T_OPEN_TAG_WITH_ECHO)"
   "close tag (T_CLOSE_TAG)"
   "whitespace (T_WHITESPACE)"
   T_ERROR


Grammar

    0 $accept: start "end of file"

    1 start: top_statement_list

    2 reserved_non_modifiers: "include (T_INCLUDE)"
    3                       | "include_once (T_INCLUDE_ONCE)"
    4                       | "eval (T_EVAL)"
    5                       | "require (T_REQUIRE)"
    6                       | "require_once (T_REQUIRE_ONCE)"
    7                       | "or (T_LOGICAL_OR)"
    8                       | "xor (T_LOGICAL_XOR)"
    9                       | "and (T_LOGICAL_AND)"
   10                       | "instanceof (T_INSTANCEOF)"
   11                       | "new (T_NEW)"
   12                       | "clone (T_CLONE)"
   13                       | "exit (T_EXIT)"
   14                       | "if (T_IF)"
   15                       | "elseif (T_ELSEIF)"
   16                       | "else (T_ELSE)"
   17                       | "endif (T_ENDIF)"
   18                       | "echo (T_ECHO)"
   19                       | "do (T_DO)"
   20                       | "while (T_WHILE)"
   21                       | "endwhile (T_ENDWHILE)"
   22                       | "for (T_FOR)"
   23                       | "endfor (T_ENDFOR)"
   24                       | "foreach (T_FOREACH)"
   25                       | "endforeach (T_ENDFOREACH)"
   26                       | "declare (T_DECLARE)"
   27                       | "enddeclare (T_ENDDECLARE)"
   28                       | "as (T_AS)"
   29                       | "try (T_TRY)"
   30                       | "catch (T_CATCH)"
   31                       | "finally (T_FINALLY)"
   32                       | "throw (T_THROW)"
   33                       | "use (T_USE)"
   34                       | "insteadof (T_INSTEADOF)"
   35                       | "global (T_GLOBAL)"
   36                       | "var (T_VAR)"
   37                       | "unset (T_UNSET)"
   38                       | "isset (T_ISSET)"
   39                       | "empty (T_EMPTY)"
   40                       | "continue (T_CONTINUE)"
   41                       | "goto (T_GOTO)"
   42                       | "function (T_FUNCTION)"
   43                       | "const (T_CONST)"
   44                       | "return (T_RETURN)"
   45                       | "print (T_PRINT)"
   46                       | "yield (T_YIELD)"
   47                       | "list (T_LIST)"
   48                       | "switch (T_SWITCH)"
   49                       | "endswitch (T_ENDSWITCH)"
   50                       | "case (T_CASE)"
   51                       | "default (T_DEFAULT)"
   52                       | "break (T_BREAK)"
   53                       | "array (T_ARRAY)"
   54                       | "callable (T_CALLABLE)"
   55                       | "extends (T_EXTENDS)"
   56                       | "implements (T_IMPLEMENTS)"
   57                       | "namespace (T_NAMESPACE)"
   58                       | "trait (T_TRAIT)"
   59                       | "interface (T_INTERFACE)"
   60                       | "class (T_CLASS)"
   61                       | "__CLASS__ (T_CLASS_C)"
   62                       | "__TRAIT__ (T_TRAIT_C)"
   63                       | "__FUNCTION__ (T_FUNC_C)"
   64                       | "__METHOD__ (T_METHOD_C)"
   65                       | "__LINE__ (T_LINE)"
   66                       | "__FILE__ (T_FILE)"
   67                       | "__DIR__ (T_DIR)"
   68                       | "__NAMESPACE__ (T_NS_C)"

   69 semi_reserved: reserved_non_modifiers
   70              | "static (T_STATIC)"
   71              | "abstract (T_ABSTRACT)"
   72              | "final (T_FINAL)"
   73              | "private (T_PRIVATE)"
   74              | "protected (T_PROTECTED)"
   75              | "public (T_PUBLIC)"

   76 identifier: "identifier (T_STRING)"
   77           | semi_reserved

   78 top_statement_list: top_statement_list top_statement
   79                   | %empty

   80 namespace_name: "identifier (T_STRING)"
   81               | namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"

   82 name: namespace_name
   83     | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
   84     | "\\ (T_NS_SEPARATOR)" namespace_name

   85 top_statement: statement
   86              | function_declaration_statement
   87              | class_declaration_statement
   88              | trait_declaration_statement
   89              | interface_declaration_statement
   90              | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'
   91              | "namespace (T_NAMESPACE)" namespace_name ';'

   92 $@1: %empty

   93 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 '{' top_statement_list '}'

   94 $@2: %empty

   95 top_statement: "namespace (T_NAMESPACE)" $@2 '{' top_statement_list '}'
   96              | "use (T_USE)" mixed_group_use_declaration ';'
   97              | "use (T_USE)" use_type group_use_declaration ';'
   98              | "use (T_USE)" use_declarations ';'
   99              | "use (T_USE)" use_type use_declarations ';'
  100              | "const (T_CONST)" const_list ';'

  101 use_type: "function (T_FUNCTION)"
  102         | "const (T_CONST)"

  103 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'
  104                      | "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'

  105 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'
  106                            | "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'

  107 inline_use_declarations: inline_use_declarations ',' inline_use_declaration
  108                        | inline_use_declaration

  109 unprefixed_use_declarations: unprefixed_use_declarations ',' unprefixed_use_declaration
  110                            | unprefixed_use_declaration

  111 use_declarations: use_declarations ',' use_declaration
  112                 | use_declaration

  113 inline_use_declaration: unprefixed_use_declaration
  114                       | use_type unprefixed_use_declaration

  115 unprefixed_use_declaration: namespace_name
  116                           | namespace_name "as (T_AS)" "identifier (T_STRING)"

  117 use_declaration: unprefixed_use_declaration
  118                | "\\ (T_NS_SEPARATOR)" unprefixed_use_declaration

  119 const_list: const_list ',' const_decl
  120           | const_decl

  121 inner_statement_list: inner_statement_list inner_statement
  122                     | %empty

  123 inner_statement: statement
  124                | function_declaration_statement
  125                | class_declaration_statement
  126                | trait_declaration_statement
  127                | interface_declaration_statement
  128                | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'

  129 statement: '{' inner_statement_list '}'
  130          | if_stmt
  131          | alt_if_stmt
  132          | "while (T_WHILE)" '(' expr ')' while_statement
  133          | "do (T_DO)" statement "while (T_WHILE)" '(' expr ')' ';'
  134          | "for (T_FOR)" '(' for_exprs ';' for_exprs ';' for_exprs ')' for_statement
  135          | "switch (T_SWITCH)" '(' expr ')' switch_case_list
  136          | "break (T_BREAK)" optional_expr ';'
  137          | "continue (T_CONTINUE)" optional_expr ';'
  138          | "return (T_RETURN)" optional_expr ';'
  139          | "global (T_GLOBAL)" global_var_list ';'
  140          | "static (T_STATIC)" static_var_list ';'
  141          | "echo (T_ECHO)" echo_expr_list ';'
  142          | T_INLINE_HTML
  143          | expr ';'
  144          | "unset (T_UNSET)" '(' unset_variables ')' ';'
  145          | "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable ')' foreach_statement
  146          | "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

  147 $@3: %empty

  148 statement: "declare (T_DECLARE)" '(' const_list ')' $@3 declare_statement
  149          | ';'
  150          | "try (T_TRY)" '{' inner_statement_list '}' catch_list finally_statement
  151          | "throw (T_THROW)" expr ';'
  152          | "goto (T_GOTO)" "identifier (T_STRING)" ';'
  153          | "identifier (T_STRING)" ':'

  154 catch_list: %empty
  155           | catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

  156 finally_statement: %empty
  157                  | "finally (T_FINALLY)" '{' inner_statement_list '}'

  158 unset_variables: unset_variable
  159                | unset_variables ',' unset_variable

  160 unset_variable: variable

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment '(' parameter_list ')' return_type '{' inner_statement_list '}'

  162 is_reference: %empty
  163             | '&'

  164 is_variadic: %empty
  165            | "... (T_ELLIPSIS)"

  166 @4: %empty

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

  168 @5: %empty

  169 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

  170 class_modifiers: class_modifier
  171                | class_modifiers class_modifier

  172 class_modifier: "abstract (T_ABSTRACT)"
  173               | "final (T_FINAL)"

  174 @6: %empty

  175 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment '{' class_statement_list '}'

  176 @7: %empty

  177 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list '}'

  178 extends_from: %empty
  179             | "extends (T_EXTENDS)" name

  180 interface_extends_list: %empty
  181                       | "extends (T_EXTENDS)" name_list

  182 implements_list: %empty
  183                | "implements (T_IMPLEMENTS)" name_list

  184 foreach_variable: variable
  185                 | '&' variable
  186                 | "list (T_LIST)" '(' assignment_list ')'

  187 for_statement: statement
  188              | ':' inner_statement_list "endfor (T_ENDFOR)" ';'

  189 foreach_statement: statement
  190                  | ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';'

  191 declare_statement: statement
  192                  | ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

  193 switch_case_list: '{' case_list '}'
  194                 | '{' ';' case_list '}'
  195                 | ':' case_list "endswitch (T_ENDSWITCH)" ';'
  196                 | ':' ';' case_list "endswitch (T_ENDSWITCH)" ';'

  197 case_list: %empty
  198          | case_list "case (T_CASE)" expr case_separator inner_statement_list
  199          | case_list "default (T_DEFAULT)" case_separator inner_statement_list

  200 case_separator: ':'
  201               | ';'

  202 while_statement: statement
  203                | ':' inner_statement_list "endwhile (T_ENDWHILE)" ';'

  204 if_stmt_without_else: "if (T_IF)" '(' expr ')' statement
  205                     | if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' statement

  206 if_stmt: if_stmt_without_else
  207        | if_stmt_without_else "else (T_ELSE)" statement

  208 alt_if_stmt_without_else: "if (T_IF)" '(' expr ')' ':' inner_statement_list
  209                         | alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' ':' inner_statement_list

  210 alt_if_stmt: alt_if_stmt_without_else "endif (T_ENDIF)" ';'
  211            | alt_if_stmt_without_else "else (T_ELSE)" ':' inner_statement_list "endif (T_ENDIF)" ';'

  212 parameter_list: non_empty_parameter_list
  213               | %empty

  214 non_empty_parameter_list: parameter
  215                         | non_empty_parameter_list ',' parameter

  216 parameter: optional_type is_reference is_variadic "variable (T_VARIABLE)"
  217          | optional_type is_reference is_variadic "variable (T_VARIABLE)" '=' expr

  218 optional_type: %empty
  219              | type

  220 type: "array (T_ARRAY)"
  221     | "callable (T_CALLABLE)"
  222     | name

  223 return_type: %empty
  224            | ':' type

  225 argument_list: '(' ')'
  226              | '(' non_empty_argument_list ')'

  227 non_empty_argument_list: argument
  228                        | non_empty_argument_list ',' argument

  229 argument: expr
  230         | "... (T_ELLIPSIS)" expr

  231 global_var_list: global_var_list ',' global_var
  232                | global_var

  233 global_var: simple_variable

  234 static_var_list: static_var_list ',' static_var
  235                | static_var

  236 static_var: "variable (T_VARIABLE)"
  237           | "variable (T_VARIABLE)" '=' expr

  238 class_statement_list: class_statement_list class_statement
  239                     | %empty

  240 class_statement: variable_modifiers property_list ';'
  241                | "const (T_CONST)" class_const_list ';'
  242                | "use (T_USE)" name_list trait_adaptations
  243                | method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type method_body

  244 name_list: name
  245          | name_list ',' name

  246 trait_adaptations: ';'
  247                  | '{' '}'
  248                  | '{' trait_adaptation_list '}'

  249 trait_adaptation_list: trait_adaptation
  250                      | trait_adaptation_list trait_adaptation

  251 trait_adaptation: trait_precedence ';'
  252                 | trait_alias ';'

  253 trait_precedence: absolute_trait_method_reference "insteadof (T_INSTEADOF)" name_list

  254 trait_alias: trait_method_reference "as (T_AS)" "identifier (T_STRING)"
  255            | trait_method_reference "as (T_AS)" reserved_non_modifiers
  256            | trait_method_reference "as (T_AS)" member_modifier identifier
  257            | trait_method_reference "as (T_AS)" member_modifier

  258 trait_method_reference: identifier
  259                       | absolute_trait_method_reference

  260 absolute_trait_method_reference: name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier

  261 method_body: ';'
  262            | '{' inner_statement_list '}'

  263 variable_modifiers: non_empty_member_modifiers
  264                   | "var (T_VAR)"

  265 method_modifiers: %empty
  266                 | non_empty_member_modifiers

  267 non_empty_member_modifiers: member_modifier
  268                           | non_empty_member_modifiers member_modifier

  269 member_modifier: "public (T_PUBLIC)"
  270                | "protected (T_PROTECTED)"
  271                | "private (T_PRIVATE)"
  272                | "static (T_STATIC)"
  273                | "abstract (T_ABSTRACT)"
  274                | "final (T_FINAL)"

  275 property_list: property_list ',' property
  276              | property

  277 property: "variable (T_VARIABLE)" backup_doc_comment
  278         | "variable (T_VARIABLE)" '=' expr backup_doc_comment

  279 class_const_list: class_const_list ',' class_const_decl
  280                 | class_const_decl

  281 class_const_decl: identifier '=' expr

  282 const_decl: "identifier (T_STRING)" '=' expr

  283 echo_expr_list: echo_expr_list ',' echo_expr
  284               | echo_expr

  285 echo_expr: expr

  286 for_exprs: %empty
  287          | non_empty_for_exprs

  288 non_empty_for_exprs: non_empty_for_exprs ',' expr
  289                    | expr

  290 @8: %empty

  291 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list '}'

  292 new_expr: "new (T_NEW)" class_name_reference ctor_arguments
  293         | "new (T_NEW)" anonymous_class

  294 expr_without_variable: "list (T_LIST)" '(' assignment_list ')' '=' expr
  295                      | variable '=' expr
  296                      | variable '=' '&' variable
  297                      | "clone (T_CLONE)" expr
  298                      | variable "+= (T_PLUS_EQUAL)" expr
  299                      | variable "-= (T_MINUS_EQUAL)" expr
  300                      | variable "*= (T_MUL_EQUAL)" expr
  301                      | variable "**= (T_POW_EQUAL)" expr
  302                      | variable "/= (T_DIV_EQUAL)" expr
  303                      | variable ".= (T_CONCAT_EQUAL)" expr
  304                      | variable "%= (T_MOD_EQUAL)" expr
  305                      | variable "&= (T_AND_EQUAL)" expr
  306                      | variable "|= (T_OR_EQUAL)" expr
  307                      | variable "^= (T_XOR_EQUAL)" expr
  308                      | variable "<<= (T_SL_EQUAL)" expr
  309                      | variable ">>= (T_SR_EQUAL)" expr
  310                      | variable "++ (T_INC)"
  311                      | "++ (T_INC)" variable
  312                      | variable "-- (T_DEC)"
  313                      | "-- (T_DEC)" variable
  314                      | expr "|| (T_BOOLEAN_OR)" expr
  315                      | expr "&& (T_BOOLEAN_AND)" expr
  316                      | expr "or (T_LOGICAL_OR)" expr
  317                      | expr "and (T_LOGICAL_AND)" expr
  318                      | expr "xor (T_LOGICAL_XOR)" expr
  319                      | expr '|' expr
  320                      | expr '&' expr
  321                      | expr '^' expr
  322                      | expr '.' expr
  323                      | expr '+' expr
  324                      | expr '-' expr
  325                      | expr '*' expr
  326                      | expr "** (T_POW)" expr
  327                      | expr '/' expr
  328                      | expr '%' expr
  329                      | expr "<< (T_SL)" expr
  330                      | expr ">> (T_SR)" expr
  331                      | '+' expr
  332                      | '-' expr
  333                      | '!' expr
  334                      | '~' expr
  335                      | expr "=== (T_IS_IDENTICAL)" expr
  336                      | expr "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr "== (T_IS_EQUAL)" expr
  338                      | expr "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr '<' expr
  340                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr '>' expr
  342                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr "<=> (T_SPACESHIP)" expr
  344                      | expr "instanceof (T_INSTANCEOF)" class_name_reference
  345                      | '(' expr ')'
  346                      | new_expr
  347                      | expr '?' expr ':' expr
  348                      | expr '?' ':' expr
  349                      | expr "?? (T_COALESCE)" expr
  350                      | internal_functions_in_yacc
  351                      | "(int) (T_INT_CAST)" expr
  352                      | "(double) (T_DOUBLE_CAST)" expr
  353                      | "(string) (T_STRING_CAST)" expr
  354                      | "(array) (T_ARRAY_CAST)" expr
  355                      | "(object) (T_OBJECT_CAST)" expr
  356                      | "(bool) (T_BOOL_CAST)" expr
  357                      | "(unset) (T_UNSET_CAST)" expr
  358                      | "exit (T_EXIT)" exit_expr
  359                      | '@' expr
  360                      | scalar
  361                      | '`' backticks_expr '`'
  362                      | "print (T_PRINT)" expr
  363                      | "yield (T_YIELD)"
  364                      | "yield (T_YIELD)" expr
  365                      | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr
  366                      | "yield from (T_YIELD_FROM)" expr
  367                      | function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'
  368                      | "static (T_STATIC)" function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

  369 function: "function (T_FUNCTION)"

  370 backup_doc_comment: %empty

  371 returns_ref: %empty
  372            | '&'

  373 lexical_vars: %empty
  374             | "use (T_USE)" '(' lexical_var_list ')'

  375 lexical_var_list: lexical_var_list ',' lexical_var
  376                 | lexical_var

  377 lexical_var: "variable (T_VARIABLE)"
  378            | '&' "variable (T_VARIABLE)"

  379 function_call: name argument_list
  380              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list
  381              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list
  382              | callable_expr argument_list

  383 class_name: "static (T_STATIC)"
  384           | name

  385 class_name_reference: class_name
  386                     | new_variable

  387 exit_expr: %empty
  388          | '(' optional_expr ')'

  389 backticks_expr: %empty
  390               | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  391               | encaps_list

  392 ctor_arguments: %empty
  393               | argument_list

  394 dereferencable_scalar: "array (T_ARRAY)" '(' array_pair_list ')'
  395                      | '[' array_pair_list ']'
  396                      | "quoted-string (T_CONSTANT_ENCAPSED_STRING)"

  397 scalar: "integer number (T_LNUMBER)"
  398       | "floating-point number (T_DNUMBER)"
  399       | "__LINE__ (T_LINE)"
  400       | "__FILE__ (T_FILE)"
  401       | "__DIR__ (T_DIR)"
  402       | "__TRAIT__ (T_TRAIT_C)"
  403       | "__METHOD__ (T_METHOD_C)"
  404       | "__FUNCTION__ (T_FUNC_C)"
  405       | "__NAMESPACE__ (T_NS_C)"
  406       | "__CLASS__ (T_CLASS_C)"
  407       | "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  408       | "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)"
  409       | '"' encaps_list '"'
  410       | "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)"
  411       | dereferencable_scalar
  412       | constant

  413 constant: name
  414         | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier
  415         | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier

  416 possible_comma: %empty
  417               | ','

  418 expr: variable
  419     | expr_without_variable

  420 optional_expr: %empty
  421              | expr

  422 variable_class_name: dereferencable

  423 dereferencable: variable
  424               | '(' expr ')'
  425               | dereferencable_scalar

  426 callable_expr: callable_variable
  427              | '(' expr ')'
  428              | dereferencable_scalar

  429 callable_variable: simple_variable
  430                  | dereferencable '[' optional_expr ']'
  431                  | constant '[' optional_expr ']'
  432                  | dereferencable '{' expr '}'
  433                  | dereferencable "-> (T_OBJECT_OPERATOR)" property_name argument_list
  434                  | function_call

  435 variable: callable_variable
  436         | static_member
  437         | dereferencable "-> (T_OBJECT_OPERATOR)" property_name

  438 simple_variable: "variable (T_VARIABLE)"
  439                | '$' '{' expr '}'
  440                | '$' simple_variable

  441 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable
  442              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

  443 new_variable: simple_variable
  444             | new_variable '[' optional_expr ']'
  445             | new_variable '{' expr '}'
  446             | new_variable "-> (T_OBJECT_OPERATOR)" property_name
  447             | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable
  448             | new_variable ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

  449 member_name: identifier
  450            | '{' expr '}'
  451            | simple_variable

  452 property_name: "identifier (T_STRING)"
  453              | '{' expr '}'
  454              | simple_variable

  455 assignment_list: assignment_list ',' assignment_list_element
  456                | assignment_list_element

  457 assignment_list_element: variable
  458                        | "list (T_LIST)" '(' assignment_list ')'
  459                        | %empty

  460 array_pair_list: %empty
  461                | non_empty_array_pair_list possible_comma

  462 non_empty_array_pair_list: non_empty_array_pair_list ',' array_pair
  463                          | array_pair

  464 array_pair: expr "=> (T_DOUBLE_ARROW)" expr
  465           | expr
  466           | expr "=> (T_DOUBLE_ARROW)" '&' variable
  467           | '&' variable

  468 encaps_list: encaps_list encaps_var
  469            | encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  470            | encaps_var
  471            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var

  472 encaps_var: "variable (T_VARIABLE)"
  473           | "variable (T_VARIABLE)" '[' encaps_var_offset ']'
  474           | "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"
  475           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}'
  476           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '}'
  477           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}'
  478           | "{$ (T_CURLY_OPEN)" variable '}'

  479 encaps_var_offset: "identifier (T_STRING)"
  480                  | "number (T_NUM_STRING)"
  481                  | "variable (T_VARIABLE)"

  482 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')'
  483                           | "empty (T_EMPTY)" '(' expr ')'
  484                           | "include (T_INCLUDE)" expr
  485                           | "include_once (T_INCLUDE_ONCE)" expr
  486                           | "eval (T_EVAL)" '(' expr ')'
  487                           | "require (T_REQUIRE)" expr
  488                           | "require_once (T_REQUIRE_ONCE)" expr

  489 isset_variables: isset_variable
  490                | isset_variables ',' isset_variable

  491 isset_variable: expr


Terminals, with rules where they appear

"end of file" (0) 0
'!' (33) 333
'"' (34) 409
'$' (36) 439 440
'%' (37) 328
'&' (38) 163 185 296 320 372 378 466 467
'(' (40) 90 128 132 133 134 135 144 145 146 148 155 161 186 204 205
    208 209 225 226 243 294 345 367 368 374 388 394 424 427 458 482
    483 486
')' (41) 90 128 132 133 134 135 144 145 146 148 155 161 186 204 205
    208 209 225 226 243 294 345 367 368 374 388 394 424 427 458 482
    483 486
'*' (42) 325
'+' (43) 323 331
',' (44) 107 109 111 119 159 215 228 231 234 245 275 279 283 288 375
    417 455 462 490
'-' (45) 324 332
'.' (46) 322
'/' (47) 327
':' (58) 153 188 190 192 195 196 200 203 208 209 211 224 347 348
';' (59) 90 91 96 97 98 99 100 128 133 134 136 137 138 139 140 141
    143 144 149 151 152 188 190 192 194 195 196 201 203 210 211 240
    241 246 251 252 261
'<' (60) 339
'=' (61) 217 237 278 281 282 294 295 296
'>' (62) 341
'?' (63) 347 348
'@' (64) 359
'[' (91) 395 430 431 444 473 477
']' (93) 395 430 431 444 473 477
'^' (94) 321
'`' (96) 361
'{' (123) 93 95 103 104 105 106 129 150 155 157 161 167 169 175 177
    193 194 247 248 262 291 367 368 432 439 445 450 453
'|' (124) 319
'}' (125) 93 95 103 104 105 106 129 150 155 157 161 167 169 175 177
    193 194 247 248 262 291 367 368 432 439 445 450 453 475 476 477
    478
'~' (126) 334
error (256)
"include (T_INCLUDE)" (258) 2 484
"include_once (T_INCLUDE_ONCE)" (259) 3 485
"eval (T_EVAL)" (260) 4 486
"require (T_REQUIRE)" (261) 5 487
"require_once (T_REQUIRE_ONCE)" (262) 6 488
"or (T_LOGICAL_OR)" (263) 7 316
"xor (T_LOGICAL_XOR)" (264) 8 318
"and (T_LOGICAL_AND)" (265) 9 317
"print (T_PRINT)" (266) 45 362
"yield (T_YIELD)" (267) 46 363 364 365
"=> (T_DOUBLE_ARROW)" (268) 146 365 464 466
"yield from (T_YIELD_FROM)" (269) 366
"+= (T_PLUS_EQUAL)" (270) 298
"-= (T_MINUS_EQUAL)" (271) 299
"*= (T_MUL_EQUAL)" (272) 300
"/= (T_DIV_EQUAL)" (273) 302
".= (T_CONCAT_EQUAL)" (274) 303
"%= (T_MOD_EQUAL)" (275) 304
"&= (T_AND_EQUAL)" (276) 305
"|= (T_OR_EQUAL)" (277) 306
"^= (T_XOR_EQUAL)" (278) 307
"<<= (T_SL_EQUAL)" (279) 308
">>= (T_SR_EQUAL)" (280) 309
"**= (T_POW_EQUAL)" (281) 301
"?? (T_COALESCE)" (282) 349
"|| (T_BOOLEAN_OR)" (283) 314
"&& (T_BOOLEAN_AND)" (284) 315
"== (T_IS_EQUAL)" (285) 337
"!= (T_IS_NOT_EQUAL)" (286) 338
"=== (T_IS_IDENTICAL)" (287) 335
"!== (T_IS_NOT_IDENTICAL)" (288) 336
"<=> (T_SPACESHIP)" (289) 343
"<= (T_IS_SMALLER_OR_EQUAL)" (290) 340
">= (T_IS_GREATER_OR_EQUAL)" (291) 342
"<< (T_SL)" (292) 329
">> (T_SR)" (293) 330
"instanceof (T_INSTANCEOF)" (294) 10 344
"++ (T_INC)" (295) 310 311
"-- (T_DEC)" (296) 312 313
"(int) (T_INT_CAST)" (297) 351
"(double) (T_DOUBLE_CAST)" (298) 352
"(string) (T_STRING_CAST)" (299) 353
"(array) (T_ARRAY_CAST)" (300) 354
"(object) (T_OBJECT_CAST)" (301) 355
"(bool) (T_BOOL_CAST)" (302) 356
"(unset) (T_UNSET_CAST)" (303) 357
"** (T_POW)" (304) 326
"new (T_NEW)" (305) 11 292 293
"clone (T_CLONE)" (306) 12 297
T_NOELSE (307)
"elseif (T_ELSEIF)" (308) 15 205 209
"else (T_ELSE)" (309) 16 207 211
"endif (T_ENDIF)" (310) 17 210 211
"static (T_STATIC)" (311) 70 140 272 368 383
"abstract (T_ABSTRACT)" (312) 71 172 273
"final (T_FINAL)" (313) 72 173 274
"private (T_PRIVATE)" (314) 73 271
"protected (T_PROTECTED)" (315) 74 270
"public (T_PUBLIC)" (316) 75 269
"integer number (T_LNUMBER)" (317) 397
"floating-point number (T_DNUMBER)" (318) 398
"identifier (T_STRING)" (319) 76 80 81 116 152 153 161 167 169 175
    177 254 282 452 474 479
"variable (T_VARIABLE)" (320) 155 216 217 236 237 277 278 377 378 438
    472 473 474 481
T_INLINE_HTML (321) 142
"quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" (322) 390
    407 469 471
"quoted-string (T_CONSTANT_ENCAPSED_STRING)" (323) 396
"variable name (T_STRING_VARNAME)" (324) 476 477
"number (T_NUM_STRING)" (325) 480
"exit (T_EXIT)" (326) 13 358
"if (T_IF)" (327) 14 204 208
"echo (T_ECHO)" (328) 18 141
"do (T_DO)" (329) 19 133
"while (T_WHILE)" (330) 20 132 133
"endwhile (T_ENDWHILE)" (331) 21 203
"for (T_FOR)" (332) 22 134
"endfor (T_ENDFOR)" (333) 23 188
"foreach (T_FOREACH)" (334) 24 145 146
"endforeach (T_ENDFOREACH)" (335) 25 190
"declare (T_DECLARE)" (336) 26 148
"enddeclare (T_ENDDECLARE)" (337) 27 192
"as (T_AS)" (338) 28 116 145 146 254 255 256 257
"switch (T_SWITCH)" (339) 48 135
"endswitch (T_ENDSWITCH)" (340) 49 195 196
"case (T_CASE)" (341) 50 198
"default (T_DEFAULT)" (342) 51 199
"break (T_BREAK)" (343) 52 136
"continue (T_CONTINUE)" (344) 40 137
"goto (T_GOTO)" (345) 41 152
"function (T_FUNCTION)" (346) 42 101 369
"const (T_CONST)" (347) 43 100 102 241
"return (T_RETURN)" (348) 44 138
"try (T_TRY)" (349) 29 150
"catch (T_CATCH)" (350) 30 155
"finally (T_FINALLY)" (351) 31 157
"throw (T_THROW)" (352) 32 151
"use (T_USE)" (353) 33 96 97 98 99 242 374
"insteadof (T_INSTEADOF)" (354) 34 253
"global (T_GLOBAL)" (355) 35 139
"var (T_VAR)" (356) 36 264
"unset (T_UNSET)" (357) 37 144
"isset (T_ISSET)" (358) 38 482
"empty (T_EMPTY)" (359) 39 483
"__halt_compiler (T_HALT_COMPILER)" (360) 90 128
"class (T_CLASS)" (361) 60 167 169 291
"trait (T_TRAIT)" (362) 58 175
"interface (T_INTERFACE)" (363) 59 177
"extends (T_EXTENDS)" (364) 55 179 181
"implements (T_IMPLEMENTS)" (365) 56 183
"-> (T_OBJECT_OPERATOR)" (366) 433 437 446 474
"list (T_LIST)" (367) 47 186 294 458
"array (T_ARRAY)" (368) 53 220 394
"callable (T_CALLABLE)" (369) 54 221
"__LINE__ (T_LINE)" (370) 65 399
"__FILE__ (T_FILE)" (371) 66 400
"__DIR__ (T_DIR)" (372) 67 401
"__CLASS__ (T_CLASS_C)" (373) 61 406
"__TRAIT__ (T_TRAIT_C)" (374) 62 402
"__METHOD__ (T_METHOD_C)" (375) 64 403
"__FUNCTION__ (T_FUNC_C)" (376) 63 404
"comment (T_COMMENT)" (377)
"doc comment (T_DOC_COMMENT)" (378)
"open tag (T_OPEN_TAG)" (379)
"open tag with echo (T_OPEN_TAG_WITH_ECHO)" (380)
"close tag (T_CLOSE_TAG)" (381)
"whitespace (T_WHITESPACE)" (382)
"heredoc start (T_START_HEREDOC)" (383) 407 408 410
"heredoc end (T_END_HEREDOC)" (384) 407 408 410
"${ (T_DOLLAR_OPEN_CURLY_BRACES)" (385) 475 476 477
"{$ (T_CURLY_OPEN)" (386) 478
":: (T_PAAMAYIM_NEKUDOTAYIM)" (387) 260 380 381 414 415 441 442 447
    448
"namespace (T_NAMESPACE)" (388) 57 83 91 93 95
"__NAMESPACE__ (T_NS_C)" (389) 68 405
"\\ (T_NS_SEPARATOR)" (390) 81 83 84 103 104 105 106 118
"... (T_ELLIPSIS)" (391) 165 230
T_ERROR (392)


Nonterminals, with rules where they appear

$accept (166)
    on left: 0
start (167)
    on left: 1, on right: 0
reserved_non_modifiers (168)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
    44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68, on right: 69 255
semi_reserved (169)
    on left: 69 70 71 72 73 74 75, on right: 77
identifier (170)
    on left: 76 77, on right: 243 256 258 260 281 414 415 449
top_statement_list (171)
    on left: 78 79, on right: 1 78 93 95
namespace_name (172)
    on left: 80 81, on right: 81 82 83 84 91 93 103 104 105 106 115
    116
name (173)
    on left: 82 83 84, on right: 155 179 222 244 245 260 379 384 413
top_statement (174)
    on left: 85 86 87 88 89 90 91 93 95 96 97 98 99 100, on right:
    78
$@1 (175)
    on left: 92, on right: 93
$@2 (176)
    on left: 94, on right: 95
use_type (177)
    on left: 101 102, on right: 97 99 114
group_use_declaration (178)
    on left: 103 104, on right: 97
mixed_group_use_declaration (179)
    on left: 105 106, on right: 96
inline_use_declarations (180)
    on left: 107 108, on right: 105 106 107
unprefixed_use_declarations (181)
    on left: 109 110, on right: 103 104 109
use_declarations (182)
    on left: 111 112, on right: 98 99 111
inline_use_declaration (183)
    on left: 113 114, on right: 107 108
unprefixed_use_declaration (184)
    on left: 115 116, on right: 109 110 113 114 117 118
use_declaration (185)
    on left: 117 118, on right: 111 112
const_list (186)
    on left: 119 120, on right: 100 119 148
inner_statement_list (187)
    on left: 121 122, on right: 121 129 150 155 157 161 188 190 192
    198 199 203 208 209 211 262 367 368
inner_statement (188)
    on left: 123 124 125 126 127 128, on right: 121
statement (189)
    on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142
    143 144 145 146 148 149 150 151 152 153, on right: 85 123 133 187
    189 191 202 204 205 207
$@3 (190)
    on left: 147, on right: 148
catch_list (191)
    on left: 154 155, on right: 150 155
finally_statement (192)
    on left: 156 157, on right: 150
unset_variables (193)
    on left: 158 159, on right: 144 159
unset_variable (194)
    on left: 160, on right: 158 159
function_declaration_statement (195)
    on left: 161, on right: 86 124
is_reference (196)
    on left: 162 163, on right: 216 217
is_variadic (197)
    on left: 164 165, on right: 216 217
class_declaration_statement (198)
    on left: 167 169, on right: 87 125
@4 (199)
    on left: 166, on right: 167
@5 (200)
    on left: 168, on right: 169
class_modifiers (201)
    on left: 170 171, on right: 167 171
class_modifier (202)
    on left: 172 173, on right: 170 171
trait_declaration_statement (203)
    on left: 175, on right: 88 126
@6 (204)
    on left: 174, on right: 175
interface_declaration_statement (205)
    on left: 177, on right: 89 127
@7 (206)
    on left: 176, on right: 177
extends_from (207)
    on left: 178 179, on right: 167 169 291
interface_extends_list (208)
    on left: 180 181, on right: 177
implements_list (209)
    on left: 182 183, on right: 167 169 291
foreach_variable (210)
    on left: 184 185 186, on right: 145 146
for_statement (211)
    on left: 187 188, on right: 134
foreach_statement (212)
    on left: 189 190, on right: 145 146
declare_statement (213)
    on left: 191 192, on right: 148
switch_case_list (214)
    on left: 193 194 195 196, on right: 135
case_list (215)
    on left: 197 198 199, on right: 193 194 195 196 198 199
case_separator (216)
    on left: 200 201, on right: 198 199
while_statement (217)
    on left: 202 203, on right: 132
if_stmt_without_else (218)
    on left: 204 205, on right: 205 206 207
if_stmt (219)
    on left: 206 207, on right: 130
alt_if_stmt_without_else (220)
    on left: 208 209, on right: 209 210 211
alt_if_stmt (221)
    on left: 210 211, on right: 131
parameter_list (222)
    on left: 212 213, on right: 161 243 367 368
non_empty_parameter_list (223)
    on left: 214 215, on right: 212 215
parameter (224)
    on left: 216 217, on right: 214 215
optional_type (225)
    on left: 218 219, on right: 216 217
type (226)
    on left: 220 221 222, on right: 219 224
return_type (227)
    on left: 223 224, on right: 161 243 367 368
argument_list (228)
    on left: 225 226, on right: 379 380 381 382 393 433
non_empty_argument_list (229)
    on left: 227 228, on right: 226 228
argument (230)
    on left: 229 230, on right: 227 228
global_var_list (231)
    on left: 231 232, on right: 139 231
global_var (232)
    on left: 233, on right: 231 232
static_var_list (233)
    on left: 234 235, on right: 140 234
static_var (234)
    on left: 236 237, on right: 234 235
class_statement_list (235)
    on left: 238 239, on right: 167 169 175 177 238 291
class_statement (236)
    on left: 240 241 242 243, on right: 238
name_list (237)
    on left: 244 245, on right: 181 183 242 245 253
trait_adaptations (238)
    on left: 246 247 248, on right: 242
trait_adaptation_list (239)
    on left: 249 250, on right: 248 250
trait_adaptation (240)
    on left: 251 252, on right: 249 250
trait_precedence (241)
    on left: 253, on right: 251
trait_alias (242)
    on left: 254 255 256 257, on right: 252
trait_method_reference (243)
    on left: 258 259, on right: 254 255 256 257
absolute_trait_method_reference (244)
    on left: 260, on right: 253 259
method_body (245)
    on left: 261 262, on right: 243
variable_modifiers (246)
    on left: 263 264, on right: 240
method_modifiers (247)
    on left: 265 266, on right: 243
non_empty_member_modifiers (248)
    on left: 267 268, on right: 263 266 268
member_modifier (249)
    on left: 269 270 271 272 273 274, on right: 256 257 267 268
property_list (250)
    on left: 275 276, on right: 240 275
property (251)
    on left: 277 278, on right: 275 276
class_const_list (252)
    on left: 279 280, on right: 241 279
class_const_decl (253)
    on left: 281, on right: 279 280
const_decl (254)
    on left: 282, on right: 119 120
echo_expr_list (255)
    on left: 283 284, on right: 141 283
echo_expr (256)
    on left: 285, on right: 283 284
for_exprs (257)
    on left: 286 287, on right: 134
non_empty_for_exprs (258)
    on left: 288 289, on right: 287 288
anonymous_class (259)
    on left: 291, on right: 293
@8 (260)
    on left: 290, on right: 291
new_expr (261)
    on left: 292 293, on right: 346
expr_without_variable (262)
    on left: 294 295 296 297 298 299 300 301 302 303 304 305 306 307
    308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323
    324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339
    340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355
    356 357 358 359 360 361 362 363 364 365 366 367 368, on right:
    419
function (263)
    on left: 369, on right: 161 243 367 368
backup_doc_comment (264)
    on left: 370, on right: 161 167 169 175 177 243 277 278 291 367
    368
returns_ref (265)
    on left: 371 372, on right: 161 243 367 368
lexical_vars (266)
    on left: 373 374, on right: 367 368
lexical_var_list (267)
    on left: 375 376, on right: 374 375
lexical_var (268)
    on left: 377 378, on right: 375 376
function_call (269)
    on left: 379 380 381 382, on right: 434
class_name (270)
    on left: 383 384, on right: 380 385 414 441 447
class_name_reference (271)
    on left: 385 386, on right: 292 344
exit_expr (272)
    on left: 387 388, on right: 358
backticks_expr (273)
    on left: 389 390 391, on right: 361
ctor_arguments (274)
    on left: 392 393, on right: 291 292
dereferencable_scalar (275)
    on left: 394 395 396, on right: 411 425 428
scalar (276)
    on left: 397 398 399 400 401 402 403 404 405 406 407 408 409 410
    411 412, on right: 360
constant (277)
    on left: 413 414 415, on right: 412 431
possible_comma (278)
    on left: 416 417, on right: 461
expr (279)
    on left: 418 419, on right: 132 133 135 143 145 146 151 198 204
    205 208 209 217 229 230 237 278 281 282 285 288 289 294 295 297
    298 299 300 301 302 303 304 305 306 307 308 309 314 315 316 317
    318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333
    334 335 336 337 338 339 340 341 342 343 344 345 347 348 349 351
    352 353 354 355 356 357 359 362 364 365 366 421 424 427 432 439
    445 450 453 464 465 466 475 477 483 484 485 486 487 488 491
optional_expr (280)
    on left: 420 421, on right: 136 137 138 388 430 431 444
variable_class_name (281)
    on left: 422, on right: 381 415 442
dereferencable (282)
    on left: 423 424 425, on right: 422 430 432 433 437
callable_expr (283)
    on left: 426 427 428, on right: 382
callable_variable (284)
    on left: 429 430 431 432 433 434, on right: 426 435
variable (285)
    on left: 435 436 437, on right: 160 184 185 295 296 298 299 300
    301 302 303 304 305 306 307 308 309 310 311 312 313 418 423 457
    466 467 478
simple_variable (286)
    on left: 438 439 440, on right: 233 429 440 441 442 443 447 448
    451 454
static_member (287)
    on left: 441 442, on right: 436
new_variable (288)
    on left: 443 444 445 446 447 448, on right: 386 444 445 446 448
member_name (289)
    on left: 449 450 451, on right: 380 381
property_name (290)
    on left: 452 453 454, on right: 433 437 446
assignment_list (291)
    on left: 455 456, on right: 186 294 455 458
assignment_list_element (292)
    on left: 457 458 459, on right: 455 456
array_pair_list (293)
    on left: 460 461, on right: 394 395
non_empty_array_pair_list (294)
    on left: 462 463, on right: 461 462
array_pair (295)
    on left: 464 465 466 467, on right: 462 463
encaps_list (296)
    on left: 468 469 470 471, on right: 391 409 410 468 469
encaps_var (297)
    on left: 472 473 474 475 476 477 478, on right: 468 470 471
encaps_var_offset (298)
    on left: 479 480 481, on right: 473
internal_functions_in_yacc (299)
    on left: 482 483 484 485 486 487 488, on right: 350
isset_variables (300)
    on left: 489 490, on right: 482 490
isset_variable (301)
    on left: 491, on right: 489 490


State 0

    0 $accept: . start "end of file"

    $default  reduce using rule 79 (top_statement_list)

    start               go to state 1
    top_statement_list  go to state 2


State 1

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 start: top_statement_list .
   78 top_statement_list: top_statement_list . top_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "const (T_CONST)"                             shift, and go to state 51
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "use (T_USE)"                                 shift, and go to state 55
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 60
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 74
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 1 (start)

    namespace_name                   go to state 83
    name                             go to state 84
    top_statement                    go to state 85
    statement                        go to state 86
    function_declaration_statement   go to state 87
    class_declaration_statement      go to state 88
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 91
    interface_declaration_statement  go to state 92
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 3

    0 $accept: start "end of file" .

    $default  accept


State 4

  484 internal_functions_in_yacc: "include (T_INCLUDE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 118
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 5

  485 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 119
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 6

  486 internal_functions_in_yacc: "eval (T_EVAL)" . '(' expr ')'

    '('  shift, and go to state 120


State 7

  487 internal_functions_in_yacc: "require (T_REQUIRE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 121
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 8

  488 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 122
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 9

  362 expr_without_variable: "print (T_PRINT)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 123
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 10

  363 expr_without_variable: "yield (T_YIELD)" .
  364                      | "yield (T_YIELD)" . expr
  365                      | "yield (T_YIELD)" . expr "=> (T_DOUBLE_ARROW)" expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 363 (expr_without_variable)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 124
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 11

  366 expr_without_variable: "yield from (T_YIELD_FROM)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 125
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 12

  331 expr_without_variable: '+' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 126
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 13

  332 expr_without_variable: '-' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 127
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 14

  333 expr_without_variable: '!' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 128
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 15

  334 expr_without_variable: '~' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 129
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 16

  311 expr_without_variable: "++ (T_INC)" . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 134
    simple_variable        go to state 111
    static_member          go to state 112


State 17

  313 expr_without_variable: "-- (T_DEC)" . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 135
    simple_variable        go to state 111
    static_member          go to state 112


State 18

  351 expr_without_variable: "(int) (T_INT_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 136
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 19

  352 expr_without_variable: "(double) (T_DOUBLE_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 137
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 20

  353 expr_without_variable: "(string) (T_STRING_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 138
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 21

  354 expr_without_variable: "(array) (T_ARRAY_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 139
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 22

  355 expr_without_variable: "(object) (T_OBJECT_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 140
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 23

  356 expr_without_variable: "(bool) (T_BOOL_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 141
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 24

  357 expr_without_variable: "(unset) (T_UNSET_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 142
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 25

  359 expr_without_variable: '@' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 143
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 26

  395 dereferencable_scalar: '[' . array_pair_list ']'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 144
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 460 (array_pair_list)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 145
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    array_pair_list             go to state 146
    non_empty_array_pair_list   go to state 147
    array_pair                  go to state 148
    internal_functions_in_yacc  go to state 113


State 27

  292 new_expr: "new (T_NEW)" . class_name_reference ctor_arguments
  293         | "new (T_NEW)" . anonymous_class

    "static (T_STATIC)"        shift, and go to state 130
    "identifier (T_STRING)"    shift, and go to state 115
    "variable (T_VARIABLE)"    shift, and go to state 35
    "class (T_CLASS)"          shift, and go to state 149
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76
    '$'                        shift, and go to state 82

    namespace_name        go to state 83
    name                  go to state 150
    anonymous_class       go to state 151
    class_name            go to state 152
    class_name_reference  go to state 153
    simple_variable       go to state 154
    new_variable          go to state 155


State 28

  297 expr_without_variable: "clone (T_CLONE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 156
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 29

  140 statement: "static (T_STATIC)" . static_var_list ';'
  368 expr_without_variable: "static (T_STATIC)" . function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'
  383 class_name: "static (T_STATIC)" .

    "variable (T_VARIABLE)"  shift, and go to state 157
    "function (T_FUNCTION)"  shift, and go to state 50

    $default  reduce using rule 383 (class_name)

    static_var_list  go to state 158
    static_var       go to state 159
    function         go to state 160


State 30

  172 class_modifier: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 172 (class_modifier)


State 31

  173 class_modifier: "final (T_FINAL)" .

    $default  reduce using rule 173 (class_modifier)


State 32

  397 scalar: "integer number (T_LNUMBER)" .

    $default  reduce using rule 397 (scalar)


State 33

  398 scalar: "floating-point number (T_DNUMBER)" .

    $default  reduce using rule 398 (scalar)


State 34

   80 namespace_name: "identifier (T_STRING)" .
  153 statement: "identifier (T_STRING)" . ':'

    ':'  shift, and go to state 161

    $default  reduce using rule 80 (namespace_name)


State 35

  438 simple_variable: "variable (T_VARIABLE)" .

    $default  reduce using rule 438 (simple_variable)


State 36

  142 statement: T_INLINE_HTML .

    $default  reduce using rule 142 (statement)


State 37

  396 dereferencable_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    $default  reduce using rule 396 (dereferencable_scalar)


State 38

  358 expr_without_variable: "exit (T_EXIT)" . exit_expr

    '('  shift, and go to state 162

    $default  reduce using rule 387 (exit_expr)

    exit_expr  go to state 163


State 39

  204 if_stmt_without_else: "if (T_IF)" . '(' expr ')' statement
  208 alt_if_stmt_without_else: "if (T_IF)" . '(' expr ')' ':' inner_statement_list

    '('  shift, and go to state 164


State 40

  141 statement: "echo (T_ECHO)" . echo_expr_list ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    echo_expr_list              go to state 165
    echo_expr                   go to state 166
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 167
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 41

  133 statement: "do (T_DO)" . statement "while (T_WHILE)" '(' expr ')' ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 168
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 42

  132 statement: "while (T_WHILE)" . '(' expr ')' while_statement

    '('  shift, and go to state 169


State 43

  134 statement: "for (T_FOR)" . '(' for_exprs ';' for_exprs ';' for_exprs ')' for_statement

    '('  shift, and go to state 170


State 44

  145 statement: "foreach (T_FOREACH)" . '(' expr "as (T_AS)" foreach_variable ')' foreach_statement
  146          | "foreach (T_FOREACH)" . '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

    '('  shift, and go to state 171


State 45

  148 statement: "declare (T_DECLARE)" . '(' const_list ')' $@3 declare_statement

    '('  shift, and go to state 172


State 46

  135 statement: "switch (T_SWITCH)" . '(' expr ')' switch_case_list

    '('  shift, and go to state 173


State 47

  136 statement: "break (T_BREAK)" . optional_expr ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 420 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 175
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 48

  137 statement: "continue (T_CONTINUE)" . optional_expr ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 420 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 176
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 49

  152 statement: "goto (T_GOTO)" . "identifier (T_STRING)" ';'

    "identifier (T_STRING)"  shift, and go to state 177


State 50

  369 function: "function (T_FUNCTION)" .

    $default  reduce using rule 369 (function)


State 51

  100 top_statement: "const (T_CONST)" . const_list ';'

    "identifier (T_STRING)"  shift, and go to state 178

    const_list  go to state 179
    const_decl  go to state 180


State 52

  138 statement: "return (T_RETURN)" . optional_expr ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 420 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 181
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 53

  150 statement: "try (T_TRY)" . '{' inner_statement_list '}' catch_list finally_statement

    '{'  shift, and go to state 182


State 54

  151 statement: "throw (T_THROW)" . expr ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 183
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 55

   96 top_statement: "use (T_USE)" . mixed_group_use_declaration ';'
   97              | "use (T_USE)" . use_type group_use_declaration ';'
   98              | "use (T_USE)" . use_declarations ';'
   99              | "use (T_USE)" . use_type use_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 115
    "function (T_FUNCTION)"  shift, and go to state 184
    "const (T_CONST)"        shift, and go to state 185
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 186

    namespace_name               go to state 187
    use_type                     go to state 188
    mixed_group_use_declaration  go to state 189
    use_declarations             go to state 190
    unprefixed_use_declaration   go to state 191
    use_declaration              go to state 192


State 56

  139 statement: "global (T_GLOBAL)" . global_var_list ';'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 82

    global_var_list  go to state 193
    global_var       go to state 194
    simple_variable  go to state 195


State 57

  144 statement: "unset (T_UNSET)" . '(' unset_variables ')' ';'

    '('  shift, and go to state 196


State 58

  482 internal_functions_in_yacc: "isset (T_ISSET)" . '(' isset_variables ')'

    '('  shift, and go to state 197


State 59

  483 internal_functions_in_yacc: "empty (T_EMPTY)" . '(' expr ')'

    '('  shift, and go to state 198


State 60

   90 top_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 199


State 61

  169 class_declaration_statement: "class (T_CLASS)" . @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 168 (@5)

    @5  go to state 200


State 62

  175 trait_declaration_statement: "trait (T_TRAIT)" . @6 "identifier (T_STRING)" backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 174 (@6)

    @6  go to state 201


State 63

  177 interface_declaration_statement: "interface (T_INTERFACE)" . @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 176 (@7)

    @7  go to state 202


State 64

  294 expr_without_variable: "list (T_LIST)" . '(' assignment_list ')' '=' expr

    '('  shift, and go to state 203


State 65

  394 dereferencable_scalar: "array (T_ARRAY)" . '(' array_pair_list ')'

    '('  shift, and go to state 204


State 66

  399 scalar: "__LINE__ (T_LINE)" .

    $default  reduce using rule 399 (scalar)


State 67

  400 scalar: "__FILE__ (T_FILE)" .

    $default  reduce using rule 400 (scalar)


State 68

  401 scalar: "__DIR__ (T_DIR)" .

    $default  reduce using rule 401 (scalar)


State 69

  406 scalar: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 406 (scalar)


State 70

  402 scalar: "__TRAIT__ (T_TRAIT_C)" .

    $default  reduce using rule 402 (scalar)


State 71

  403 scalar: "__METHOD__ (T_METHOD_C)" .

    $default  reduce using rule 403 (scalar)


State 72

  404 scalar: "__FUNCTION__ (T_FUNC_C)" .

    $default  reduce using rule 404 (scalar)


State 73

  407 scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  408       | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"
  410       | "heredoc start (T_START_HEREDOC)" . encaps_list "heredoc end (T_END_HEREDOC)"

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 206
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 207
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    encaps_list  go to state 210
    encaps_var   go to state 211


State 74

   83 name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
   91 top_statement: "namespace (T_NAMESPACE)" . namespace_name ';'
   93              | "namespace (T_NAMESPACE)" . namespace_name $@1 '{' top_statement_list '}'
   95              | "namespace (T_NAMESPACE)" . $@2 '{' top_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 115
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 212

    $default  reduce using rule 94 ($@2)

    namespace_name  go to state 213
    $@2             go to state 214


State 75

  405 scalar: "__NAMESPACE__ (T_NS_C)" .

    $default  reduce using rule 405 (scalar)


State 76

   84 name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name  go to state 215


State 77

  345 expr_without_variable: '(' . expr ')'
  424 dereferencable: '(' . expr ')'
  427 callable_expr: '(' . expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 216
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 78

  149 statement: ';' .

    $default  reduce using rule 149 (statement)


State 79

  129 statement: '{' . inner_statement_list '}'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 217


State 80

  361 expr_without_variable: '`' . backticks_expr '`'

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 218
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    $default  reduce using rule 389 (backticks_expr)

    backticks_expr  go to state 219
    encaps_list     go to state 220
    encaps_var      go to state 211


State 81

  409 scalar: '"' . encaps_list '"'

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 221
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    encaps_list  go to state 222
    encaps_var   go to state 211


State 82

  439 simple_variable: '$' . '{' expr '}'
  440                | '$' . simple_variable

    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 223
    '$'                      shift, and go to state 82

    simple_variable  go to state 224


State 83

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   82 name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225

    $default  reduce using rule 82 (name)


State 84

  379 function_call: name . argument_list
  384 class_name: name .
  413 constant: name .

    '('  shift, and go to state 226

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 384 (class_name)
    $default                       reduce using rule 413 (constant)

    argument_list  go to state 227


State 85

   78 top_statement_list: top_statement_list top_statement .

    $default  reduce using rule 78 (top_statement_list)


State 86

   85 top_statement: statement .

    $default  reduce using rule 85 (top_statement)


State 87

   86 top_statement: function_declaration_statement .

    $default  reduce using rule 86 (top_statement)


State 88

   87 top_statement: class_declaration_statement .

    $default  reduce using rule 87 (top_statement)


State 89

  167 class_declaration_statement: class_modifiers . "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'
  171 class_modifiers: class_modifiers . class_modifier

    "abstract (T_ABSTRACT)"  shift, and go to state 30
    "final (T_FINAL)"        shift, and go to state 31
    "class (T_CLASS)"        shift, and go to state 228

    class_modifier  go to state 229


State 90

  170 class_modifiers: class_modifier .

    $default  reduce using rule 170 (class_modifiers)


State 91

   88 top_statement: trait_declaration_statement .

    $default  reduce using rule 88 (top_statement)


State 92

   89 top_statement: interface_declaration_statement .

    $default  reduce using rule 89 (top_statement)


State 93

  205 if_stmt_without_else: if_stmt_without_else . "elseif (T_ELSEIF)" '(' expr ')' statement
  206 if_stmt: if_stmt_without_else .
  207        | if_stmt_without_else . "else (T_ELSE)" statement

    "elseif (T_ELSEIF)"  shift, and go to state 230
    "else (T_ELSE)"      shift, and go to state 231

    $default  reduce using rule 206 (if_stmt)


State 94

  130 statement: if_stmt .

    $default  reduce using rule 130 (statement)


State 95

  209 alt_if_stmt_without_else: alt_if_stmt_without_else . "elseif (T_ELSEIF)" '(' expr ')' ':' inner_statement_list
  210 alt_if_stmt: alt_if_stmt_without_else . "endif (T_ENDIF)" ';'
  211            | alt_if_stmt_without_else . "else (T_ELSE)" ':' inner_statement_list "endif (T_ENDIF)" ';'

    "elseif (T_ELSEIF)"  shift, and go to state 232
    "else (T_ELSE)"      shift, and go to state 233
    "endif (T_ENDIF)"    shift, and go to state 234


State 96

  131 statement: alt_if_stmt .

    $default  reduce using rule 131 (statement)


State 97

  346 expr_without_variable: new_expr .

    $default  reduce using rule 346 (expr_without_variable)


State 98

  419 expr: expr_without_variable .

    $default  reduce using rule 419 (expr)


State 99

  161 function_declaration_statement: function . returns_ref "identifier (T_STRING)" backup_doc_comment '(' parameter_list ')' return_type '{' inner_statement_list '}'
  367 expr_without_variable: function . returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    '&'  shift, and go to state 235

    $default  reduce using rule 371 (returns_ref)

    returns_ref  go to state 236


State 100

  434 callable_variable: function_call .

    $default  reduce using rule 434 (callable_variable)


State 101

  380 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list
  414 constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier
  441 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 237


State 102

  411 scalar: dereferencable_scalar .
  425 dereferencable: dereferencable_scalar .
  428 callable_expr: dereferencable_scalar .

    '['                            reduce using rule 425 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 425 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 425 (dereferencable)
    '('                            reduce using rule 428 (callable_expr)
    '{'                            reduce using rule 425 (dereferencable)
    $default                       reduce using rule 411 (scalar)


State 103

  360 expr_without_variable: scalar .

    $default  reduce using rule 360 (expr_without_variable)


State 104

  412 scalar: constant .
  431 callable_variable: constant . '[' optional_expr ']'

    '['  shift, and go to state 238

    $default  reduce using rule 412 (scalar)


State 105

  143 statement: expr . ';'
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ';'                           shift, and go to state 268


State 106

  381 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list
  415 constant: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier
  442 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 269


State 107

  422 variable_class_name: dereferencable .
  430 callable_variable: dereferencable . '[' optional_expr ']'
  432                  | dereferencable . '{' expr '}'
  433                  | dereferencable . "-> (T_OBJECT_OPERATOR)" property_name argument_list
  437 variable: dereferencable . "-> (T_OBJECT_OPERATOR)" property_name

    '['                       shift, and go to state 270
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 271
    '{'                       shift, and go to state 272

    $default  reduce using rule 422 (variable_class_name)


State 108

  382 function_call: callable_expr . argument_list

    '('  shift, and go to state 226

    argument_list  go to state 273


State 109

  426 callable_expr: callable_variable .
  435 variable: callable_variable .

    '('       reduce using rule 426 (callable_expr)
    $default  reduce using rule 435 (variable)


State 110

  295 expr_without_variable: variable . '=' expr
  296                      | variable . '=' '&' variable
  298                      | variable . "+= (T_PLUS_EQUAL)" expr
  299                      | variable . "-= (T_MINUS_EQUAL)" expr
  300                      | variable . "*= (T_MUL_EQUAL)" expr
  301                      | variable . "**= (T_POW_EQUAL)" expr
  302                      | variable . "/= (T_DIV_EQUAL)" expr
  303                      | variable . ".= (T_CONCAT_EQUAL)" expr
  304                      | variable . "%= (T_MOD_EQUAL)" expr
  305                      | variable . "&= (T_AND_EQUAL)" expr
  306                      | variable . "|= (T_OR_EQUAL)" expr
  307                      | variable . "^= (T_XOR_EQUAL)" expr
  308                      | variable . "<<= (T_SL_EQUAL)" expr
  309                      | variable . ">>= (T_SR_EQUAL)" expr
  310                      | variable . "++ (T_INC)"
  312                      | variable . "-- (T_DEC)"
  418 expr: variable .
  423 dereferencable: variable .

    '='                    shift, and go to state 274
    "+= (T_PLUS_EQUAL)"    shift, and go to state 275
    "-= (T_MINUS_EQUAL)"   shift, and go to state 276
    "*= (T_MUL_EQUAL)"     shift, and go to state 277
    "/= (T_DIV_EQUAL)"     shift, and go to state 278
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 279
    "%= (T_MOD_EQUAL)"     shift, and go to state 280
    "&= (T_AND_EQUAL)"     shift, and go to state 281
    "|= (T_OR_EQUAL)"      shift, and go to state 282
    "^= (T_XOR_EQUAL)"     shift, and go to state 283
    "<<= (T_SL_EQUAL)"     shift, and go to state 284
    ">>= (T_SR_EQUAL)"     shift, and go to state 285
    "**= (T_POW_EQUAL)"    shift, and go to state 286
    "++ (T_INC)"           shift, and go to state 287
    "-- (T_DEC)"           shift, and go to state 288

    '['                            reduce using rule 423 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 423 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 423 (dereferencable)
    '{'                            reduce using rule 423 (dereferencable)
    $default                       reduce using rule 418 (expr)


State 111

  429 callable_variable: simple_variable .

    $default  reduce using rule 429 (callable_variable)


State 112

  436 variable: static_member .

    $default  reduce using rule 436 (variable)


State 113

  350 expr_without_variable: internal_functions_in_yacc .

    $default  reduce using rule 350 (expr_without_variable)


State 114

  368 expr_without_variable: "static (T_STATIC)" . function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'
  383 class_name: "static (T_STATIC)" .

    "function (T_FUNCTION)"  shift, and go to state 50

    $default  reduce using rule 383 (class_name)

    function  go to state 160


State 115

   80 namespace_name: "identifier (T_STRING)" .

    $default  reduce using rule 80 (namespace_name)


State 116

   83 name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 212


State 117

  367 expr_without_variable: function . returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    '&'  shift, and go to state 235

    $default  reduce using rule 371 (returns_ref)

    returns_ref  go to state 289


State 118

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  484 internal_functions_in_yacc: "include (T_INCLUDE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 484 (internal_functions_in_yacc)


State 119

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  485 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 485 (internal_functions_in_yacc)


State 120

  486 internal_functions_in_yacc: "eval (T_EVAL)" '(' . expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 290
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 121

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  487 internal_functions_in_yacc: "require (T_REQUIRE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 487 (internal_functions_in_yacc)


State 122

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  488 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 488 (internal_functions_in_yacc)


State 123

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  362                      | "print (T_PRINT)" expr .

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 362 (expr_without_variable)


State 124

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  364                      | "yield (T_YIELD)" expr .
  365                      | "yield (T_YIELD)" expr . "=> (T_DOUBLE_ARROW)" expr

    "=> (T_DOUBLE_ARROW)"         shift, and go to state 291
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 364 (expr_without_variable)


State 125

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  366                      | "yield from (T_YIELD_FROM)" expr .

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 366 (expr_without_variable)


State 126

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  331                      | '+' expr .
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 331 (expr_without_variable)


State 127

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  332                      | '-' expr .
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 332 (expr_without_variable)


State 128

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  333                      | '!' expr .
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 333 (expr_without_variable)


State 129

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  334                      | '~' expr .
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 334 (expr_without_variable)


State 130

  383 class_name: "static (T_STATIC)" .

    $default  reduce using rule 383 (class_name)


State 131

  424 dereferencable: '(' . expr ')'
  427 callable_expr: '(' . expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 292
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 132

  425 dereferencable: dereferencable_scalar .
  428 callable_expr: dereferencable_scalar .

    '('       reduce using rule 428 (callable_expr)
    $default  reduce using rule 425 (dereferencable)


State 133

  431 callable_variable: constant . '[' optional_expr ']'

    '['  shift, and go to state 238


State 134

  311 expr_without_variable: "++ (T_INC)" variable .
  423 dereferencable: variable .

    '['                            reduce using rule 423 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 423 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 423 (dereferencable)
    '{'                            reduce using rule 423 (dereferencable)
    $default                       reduce using rule 311 (expr_without_variable)


State 135

  313 expr_without_variable: "-- (T_DEC)" variable .
  423 dereferencable: variable .

    '['                            reduce using rule 423 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 423 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 423 (dereferencable)
    '{'                            reduce using rule 423 (dereferencable)
    $default                       reduce using rule 313 (expr_without_variable)


State 136

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  351                      | "(int) (T_INT_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 351 (expr_without_variable)


State 137

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  352                      | "(double) (T_DOUBLE_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 352 (expr_without_variable)


State 138

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  353                      | "(string) (T_STRING_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 353 (expr_without_variable)


State 139

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  354                      | "(array) (T_ARRAY_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 354 (expr_without_variable)


State 140

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  355                      | "(object) (T_OBJECT_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 355 (expr_without_variable)


State 141

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  356                      | "(bool) (T_BOOL_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 356 (expr_without_variable)


State 142

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  357                      | "(unset) (T_UNSET_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 357 (expr_without_variable)


State 143

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  359                      | '@' expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 359 (expr_without_variable)


State 144

  467 array_pair: '&' . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 293
    simple_variable        go to state 111
    static_member          go to state 112


State 145

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  464 array_pair: expr . "=> (T_DOUBLE_ARROW)" expr
  465           | expr .
  466           | expr . "=> (T_DOUBLE_ARROW)" '&' variable

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 294
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 465 (array_pair)


State 146

  395 dereferencable_scalar: '[' array_pair_list . ']'

    ']'  shift, and go to state 295


State 147

  461 array_pair_list: non_empty_array_pair_list . possible_comma
  462 non_empty_array_pair_list: non_empty_array_pair_list . ',' array_pair

    ','  shift, and go to state 296

    $default  reduce using rule 416 (possible_comma)

    possible_comma  go to state 297


State 148

  463 non_empty_array_pair_list: array_pair .

    $default  reduce using rule 463 (non_empty_array_pair_list)


State 149

  291 anonymous_class: "class (T_CLASS)" . @8 ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 290 (@8)

    @8  go to state 298


State 150

  384 class_name: name .

    $default  reduce using rule 384 (class_name)


State 151

  293 new_expr: "new (T_NEW)" anonymous_class .

    $default  reduce using rule 293 (new_expr)


State 152

  385 class_name_reference: class_name .
  447 new_variable: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 299

    $default  reduce using rule 385 (class_name_reference)


State 153

  292 new_expr: "new (T_NEW)" class_name_reference . ctor_arguments

    '('  shift, and go to state 226

    $default  reduce using rule 392 (ctor_arguments)

    argument_list   go to state 300
    ctor_arguments  go to state 301


State 154

  443 new_variable: simple_variable .

    $default  reduce using rule 443 (new_variable)


State 155

  386 class_name_reference: new_variable .
  444 new_variable: new_variable . '[' optional_expr ']'
  445             | new_variable . '{' expr '}'
  446             | new_variable . "-> (T_OBJECT_OPERATOR)" property_name
  448             | new_variable . ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

    '['                            shift, and go to state 302
    "-> (T_OBJECT_OPERATOR)"       shift, and go to state 303
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 304
    '{'                            shift, and go to state 305

    $default  reduce using rule 386 (class_name_reference)


State 156

  297 expr_without_variable: "clone (T_CLONE)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    $default  reduce using rule 297 (expr_without_variable)


State 157

  236 static_var: "variable (T_VARIABLE)" .
  237           | "variable (T_VARIABLE)" . '=' expr

    '='  shift, and go to state 306

    $default  reduce using rule 236 (static_var)


State 158

  140 statement: "static (T_STATIC)" static_var_list . ';'
  234 static_var_list: static_var_list . ',' static_var

    ','  shift, and go to state 307
    ';'  shift, and go to state 308


State 159

  235 static_var_list: static_var .

    $default  reduce using rule 235 (static_var_list)


State 160

  368 expr_without_variable: "static (T_STATIC)" function . returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    '&'  shift, and go to state 235

    $default  reduce using rule 371 (returns_ref)

    returns_ref  go to state 309


State 161

  153 statement: "identifier (T_STRING)" ':' .

    $default  reduce using rule 153 (statement)


State 162

  388 exit_expr: '(' . optional_expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 420 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 310
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 163

  358 expr_without_variable: "exit (T_EXIT)" exit_expr .

    $default  reduce using rule 358 (expr_without_variable)


State 164

  204 if_stmt_without_else: "if (T_IF)" '(' . expr ')' statement
  208 alt_if_stmt_without_else: "if (T_IF)" '(' . expr ')' ':' inner_statement_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 311
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 165

  141 statement: "echo (T_ECHO)" echo_expr_list . ';'
  283 echo_expr_list: echo_expr_list . ',' echo_expr

    ','  shift, and go to state 312
    ';'  shift, and go to state 313


State 166

  284 echo_expr_list: echo_expr .

    $default  reduce using rule 284 (echo_expr_list)


State 167

  285 echo_expr: expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 285 (echo_expr)


State 168

  133 statement: "do (T_DO)" statement . "while (T_WHILE)" '(' expr ')' ';'

    "while (T_WHILE)"  shift, and go to state 314


State 169

  132 statement: "while (T_WHILE)" '(' . expr ')' while_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 315
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 170

  134 statement: "for (T_FOR)" '(' . for_exprs ';' for_exprs ';' for_exprs ')' for_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 286 (for_exprs)

    namespace_name              go to state 83
    name                        go to state 84
    for_exprs                   go to state 316
    non_empty_for_exprs         go to state 317
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 318
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 171

  145 statement: "foreach (T_FOREACH)" '(' . expr "as (T_AS)" foreach_variable ')' foreach_statement
  146          | "foreach (T_FOREACH)" '(' . expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 319
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 172

  148 statement: "declare (T_DECLARE)" '(' . const_list ')' $@3 declare_statement

    "identifier (T_STRING)"  shift, and go to state 178

    const_list  go to state 320
    const_decl  go to state 180


State 173

  135 statement: "switch (T_SWITCH)" '(' . expr ')' switch_case_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 321
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 174

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  421 optional_expr: expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 421 (optional_expr)


State 175

  136 statement: "break (T_BREAK)" optional_expr . ';'

    ';'  shift, and go to state 322


State 176

  137 statement: "continue (T_CONTINUE)" optional_expr . ';'

    ';'  shift, and go to state 323


State 177

  152 statement: "goto (T_GOTO)" "identifier (T_STRING)" . ';'

    ';'  shift, and go to state 324


State 178

  282 const_decl: "identifier (T_STRING)" . '=' expr

    '='  shift, and go to state 325


State 179

  100 top_statement: "const (T_CONST)" const_list . ';'
  119 const_list: const_list . ',' const_decl

    ','  shift, and go to state 326
    ';'  shift, and go to state 327


State 180

  120 const_list: const_decl .

    $default  reduce using rule 120 (const_list)


State 181

  138 statement: "return (T_RETURN)" optional_expr . ';'

    ';'  shift, and go to state 328


State 182

  150 statement: "try (T_TRY)" '{' . inner_statement_list '}' catch_list finally_statement

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 329


State 183

  151 statement: "throw (T_THROW)" expr . ';'
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ';'                           shift, and go to state 330


State 184

  101 use_type: "function (T_FUNCTION)" .

    $default  reduce using rule 101 (use_type)


State 185

  102 use_type: "const (T_CONST)" .

    $default  reduce using rule 102 (use_type)


State 186

  106 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'
  118 use_declaration: "\\ (T_NS_SEPARATOR)" . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 331
    unprefixed_use_declaration  go to state 332


State 187

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  105 mixed_group_use_declaration: namespace_name . "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'
  115 unprefixed_use_declaration: namespace_name .
  116                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 334

    $default  reduce using rule 115 (unprefixed_use_declaration)


State 188

   97 top_statement: "use (T_USE)" use_type . group_use_declaration ';'
   99              | "use (T_USE)" use_type . use_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 115
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 335

    namespace_name              go to state 336
    group_use_declaration       go to state 337
    use_declarations            go to state 338
    unprefixed_use_declaration  go to state 191
    use_declaration             go to state 192


State 189

   96 top_statement: "use (T_USE)" mixed_group_use_declaration . ';'

    ';'  shift, and go to state 339


State 190

   98 top_statement: "use (T_USE)" use_declarations . ';'
  111 use_declarations: use_declarations . ',' use_declaration

    ','  shift, and go to state 340
    ';'  shift, and go to state 341


State 191

  117 use_declaration: unprefixed_use_declaration .

    $default  reduce using rule 117 (use_declaration)


State 192

  112 use_declarations: use_declaration .

    $default  reduce using rule 112 (use_declarations)


State 193

  139 statement: "global (T_GLOBAL)" global_var_list . ';'
  231 global_var_list: global_var_list . ',' global_var

    ','  shift, and go to state 342
    ';'  shift, and go to state 343


State 194

  232 global_var_list: global_var .

    $default  reduce using rule 232 (global_var_list)


State 195

  233 global_var: simple_variable .

    $default  reduce using rule 233 (global_var)


State 196

  144 statement: "unset (T_UNSET)" '(' . unset_variables ')' ';'

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    unset_variables        go to state 344
    unset_variable         go to state 345
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 346
    simple_variable        go to state 111
    static_member          go to state 112


State 197

  482 internal_functions_in_yacc: "isset (T_ISSET)" '(' . isset_variables ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 347
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113
    isset_variables             go to state 348
    isset_variable              go to state 349


State 198

  483 internal_functions_in_yacc: "empty (T_EMPTY)" '(' . expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 350
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 199

   90 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 351


State 200

  169 class_declaration_statement: "class (T_CLASS)" @5 . "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 352


State 201

  175 trait_declaration_statement: "trait (T_TRAIT)" @6 . "identifier (T_STRING)" backup_doc_comment '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 353


State 202

  177 interface_declaration_statement: "interface (T_INTERFACE)" @7 . "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 354


State 203

  294 expr_without_variable: "list (T_LIST)" '(' . assignment_list ')' '=' expr

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 355
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    $default  reduce using rule 459 (assignment_list_element)

    namespace_name           go to state 83
    name                     go to state 84
    function_call            go to state 100
    class_name               go to state 101
    dereferencable_scalar    go to state 132
    constant                 go to state 133
    variable_class_name      go to state 106
    dereferencable           go to state 107
    callable_expr            go to state 108
    callable_variable        go to state 109
    variable                 go to state 356
    simple_variable          go to state 111
    static_member            go to state 112
    assignment_list          go to state 357
    assignment_list_element  go to state 358


State 204

  394 dereferencable_scalar: "array (T_ARRAY)" '(' . array_pair_list ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 144
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 460 (array_pair_list)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 145
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    array_pair_list             go to state 359
    non_empty_array_pair_list   go to state 147
    array_pair                  go to state 148
    internal_functions_in_yacc  go to state 113


State 205

  472 encaps_var: "variable (T_VARIABLE)" .
  473           | "variable (T_VARIABLE)" . '[' encaps_var_offset ']'
  474           | "variable (T_VARIABLE)" . "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"

    '['                       shift, and go to state 360
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 361

    $default  reduce using rule 472 (encaps_var)


State 206

  407 scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"
  471 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 205
    "heredoc end (T_END_HEREDOC)"      shift, and go to state 362
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                shift, and go to state 209

    encaps_var  go to state 363


State 207

  408 scalar: "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 408 (scalar)


State 208

  475 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . expr '}'
  476           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . "variable name (T_STRING_VARNAME)" '}'
  477           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . "variable name (T_STRING_VARNAME)" '[' expr ']' '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "variable name (T_STRING_VARNAME)"            shift, and go to state 364
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 365
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 209

  478 encaps_var: "{$ (T_CURLY_OPEN)" . variable '}'

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 366
    simple_variable        go to state 111
    static_member          go to state 112


State 210

  410 scalar: "heredoc start (T_START_HEREDOC)" encaps_list . "heredoc end (T_END_HEREDOC)"
  468 encaps_list: encaps_list . encaps_var
  469            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 367
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 368
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    encaps_var  go to state 369


State 211

  470 encaps_list: encaps_var .

    $default  reduce using rule 470 (encaps_list)


State 212

   83 name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name  go to state 370


State 213

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   91 top_statement: "namespace (T_NAMESPACE)" namespace_name . ';'
   93              | "namespace (T_NAMESPACE)" namespace_name . $@1 '{' top_statement_list '}'

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225
    ';'                    shift, and go to state 371

    $default  reduce using rule 92 ($@1)

    $@1  go to state 372


State 214

   95 top_statement: "namespace (T_NAMESPACE)" $@2 . '{' top_statement_list '}'

    '{'  shift, and go to state 373


State 215

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   84 name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225

    $default  reduce using rule 84 (name)


State 216

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  345                      | '(' expr . ')'
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  424 dereferencable: '(' expr . ')'
  427 callable_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 374


State 217

  121 inner_statement_list: inner_statement_list . inner_statement
  129 statement: '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 376
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 218

  390 backticks_expr: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .
  471 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 205
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                shift, and go to state 209

    $default  reduce using rule 390 (backticks_expr)

    encaps_var  go to state 363


State 219

  361 expr_without_variable: '`' backticks_expr . '`'

    '`'  shift, and go to state 383


State 220

  391 backticks_expr: encaps_list .
  468 encaps_list: encaps_list . encaps_var
  469            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 367
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    $default  reduce using rule 391 (backticks_expr)

    encaps_var  go to state 369


State 221

  471 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 205
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                shift, and go to state 209

    encaps_var  go to state 363


State 222

  409 scalar: '"' encaps_list . '"'
  468 encaps_list: encaps_list . encaps_var
  469            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 367
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209
    '"'                                                         shift, and go to state 384

    encaps_var  go to state 369


State 223

  439 simple_variable: '$' '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 385
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 224

  440 simple_variable: '$' simple_variable .

    $default  reduce using rule 440 (simple_variable)


State 225

   81 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 386


State 226

  225 argument_list: '(' . ')'
  226              | '(' . non_empty_argument_list ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    "... (T_ELLIPSIS)"                            shift, and go to state 387
    '('                                           shift, and go to state 77
    ')'                                           shift, and go to state 388
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    non_empty_argument_list     go to state 389
    argument                    go to state 390
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 391
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 227

  379 function_call: name argument_list .

    $default  reduce using rule 379 (function_call)


State 228

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" . @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 166 (@4)

    @4  go to state 392


State 229

  171 class_modifiers: class_modifiers class_modifier .

    $default  reduce using rule 171 (class_modifiers)


State 230

  205 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" . '(' expr ')' statement

    '('  shift, and go to state 393


State 231

  207 if_stmt: if_stmt_without_else "else (T_ELSE)" . statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 394
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 232

  209 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" . '(' expr ')' ':' inner_statement_list

    '('  shift, and go to state 395


State 233

  211 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" . ':' inner_statement_list "endif (T_ENDIF)" ';'

    ':'  shift, and go to state 396


State 234

  210 alt_if_stmt: alt_if_stmt_without_else "endif (T_ENDIF)" . ';'

    ';'  shift, and go to state 397


State 235

  372 returns_ref: '&' .

    $default  reduce using rule 372 (returns_ref)


State 236

  161 function_declaration_statement: function returns_ref . "identifier (T_STRING)" backup_doc_comment '(' parameter_list ')' return_type '{' inner_statement_list '}'
  367 expr_without_variable: function returns_ref . backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 398

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 399


State 237

  380 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . member_name argument_list
  414 constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . identifier
  441 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . simple_variable

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "variable (T_VARIABLE)"          shift, and go to state 35
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 472
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473
    '{'                              shift, and go to state 474
    '$'                              shift, and go to state 82

    reserved_non_modifiers  go to state 475
    semi_reserved           go to state 476
    identifier              go to state 477
    simple_variable         go to state 478
    member_name             go to state 479


State 238

  431 callable_variable: constant '[' . optional_expr ']'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 420 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 480
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 239

  316 expr_without_variable: expr "or (T_LOGICAL_OR)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 481
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 240

  318 expr_without_variable: expr "xor (T_LOGICAL_XOR)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 482
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 241

  317 expr_without_variable: expr "and (T_LOGICAL_AND)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 483
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 242

  347 expr_without_variable: expr '?' . expr ':' expr
  348                      | expr '?' . ':' expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 484
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 485
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 243

  349 expr_without_variable: expr "?? (T_COALESCE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 486
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 244

  314 expr_without_variable: expr "|| (T_BOOLEAN_OR)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 487
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 245

  315 expr_without_variable: expr "&& (T_BOOLEAN_AND)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 488
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 246

  319 expr_without_variable: expr '|' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 489
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 247

  321 expr_without_variable: expr '^' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 490
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 248

  320 expr_without_variable: expr '&' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 491
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 249

  337 expr_without_variable: expr "== (T_IS_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 492
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 250

  338 expr_without_variable: expr "!= (T_IS_NOT_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 493
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 251

  335 expr_without_variable: expr "=== (T_IS_IDENTICAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 494
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 252

  336 expr_without_variable: expr "!== (T_IS_NOT_IDENTICAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 495
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 253

  343 expr_without_variable: expr "<=> (T_SPACESHIP)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 496
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 254

  339 expr_without_variable: expr '<' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 497
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 255

  340 expr_without_variable: expr "<= (T_IS_SMALLER_OR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 498
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 256

  341 expr_without_variable: expr '>' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 499
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 257

  342 expr_without_variable: expr ">= (T_IS_GREATER_OR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 500
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 258

  329 expr_without_variable: expr "<< (T_SL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 501
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 259

  330 expr_without_variable: expr ">> (T_SR)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 502
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 260

  323 expr_without_variable: expr '+' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 503
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 261

  324 expr_without_variable: expr '-' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 504
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 262

  322 expr_without_variable: expr '.' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 505
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 263

  325 expr_without_variable: expr '*' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 506
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 264

  327 expr_without_variable: expr '/' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 507
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 265

  328 expr_without_variable: expr '%' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 508
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 266

  344 expr_without_variable: expr "instanceof (T_INSTANCEOF)" . class_name_reference

    "static (T_STATIC)"        shift, and go to state 130
    "identifier (T_STRING)"    shift, and go to state 115
    "variable (T_VARIABLE)"    shift, and go to state 35
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76
    '$'                        shift, and go to state 82

    namespace_name        go to state 83
    name                  go to state 150
    class_name            go to state 152
    class_name_reference  go to state 509
    simple_variable       go to state 154
    new_variable          go to state 155


State 267

  326 expr_without_variable: expr "** (T_POW)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 510
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 268

  143 statement: expr ';' .

    $default  reduce using rule 143 (statement)


State 269

  381 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . member_name argument_list
  415 constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . identifier
  442 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . simple_variable

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "variable (T_VARIABLE)"          shift, and go to state 35
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 472
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473
    '{'                              shift, and go to state 474
    '$'                              shift, and go to state 82

    reserved_non_modifiers  go to state 475
    semi_reserved           go to state 476
    identifier              go to state 511
    simple_variable         go to state 512
    member_name             go to state 513


State 270

  430 callable_variable: dereferencable '[' . optional_expr ']'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 420 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 514
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 271

  433 callable_variable: dereferencable "-> (T_OBJECT_OPERATOR)" . property_name argument_list
  437 variable: dereferencable "-> (T_OBJECT_OPERATOR)" . property_name

    "identifier (T_STRING)"  shift, and go to state 515
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 516
    '$'                      shift, and go to state 82

    simple_variable  go to state 517
    property_name    go to state 518


State 272

  432 callable_variable: dereferencable '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 519
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 273

  382 function_call: callable_expr argument_list .

    $default  reduce using rule 382 (function_call)


State 274

  295 expr_without_variable: variable '=' . expr
  296                      | variable '=' . '&' variable

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 520
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 521
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 275

  298 expr_without_variable: variable "+= (T_PLUS_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 522
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 276

  299 expr_without_variable: variable "-= (T_MINUS_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 523
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 277

  300 expr_without_variable: variable "*= (T_MUL_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 524
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 278

  302 expr_without_variable: variable "/= (T_DIV_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 525
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 279

  303 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 526
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 280

  304 expr_without_variable: variable "%= (T_MOD_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 527
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 281

  305 expr_without_variable: variable "&= (T_AND_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 528
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 282

  306 expr_without_variable: variable "|= (T_OR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 529
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 283

  307 expr_without_variable: variable "^= (T_XOR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 530
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 284

  308 expr_without_variable: variable "<<= (T_SL_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 531
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 285

  309 expr_without_variable: variable ">>= (T_SR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 532
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 286

  301 expr_without_variable: variable "**= (T_POW_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 533
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 287

  310 expr_without_variable: variable "++ (T_INC)" .

    $default  reduce using rule 310 (expr_without_variable)


State 288

  312 expr_without_variable: variable "-- (T_DEC)" .

    $default  reduce using rule 312 (expr_without_variable)


State 289

  367 expr_without_variable: function returns_ref . backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 399


State 290

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  486 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 534


State 291

  365 expr_without_variable: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 535
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 292

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  424 dereferencable: '(' expr . ')'
  427 callable_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 536


State 293

  423 dereferencable: variable .
  467 array_pair: '&' variable .

    ','       reduce using rule 467 (array_pair)
    ')'       reduce using rule 467 (array_pair)
    ']'       reduce using rule 467 (array_pair)
    $default  reduce using rule 423 (dereferencable)


State 294

  464 array_pair: expr "=> (T_DOUBLE_ARROW)" . expr
  466           | expr "=> (T_DOUBLE_ARROW)" . '&' variable

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 537
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 538
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 295

  395 dereferencable_scalar: '[' array_pair_list ']' .

    $default  reduce using rule 395 (dereferencable_scalar)


State 296

  417 possible_comma: ',' .
  462 non_empty_array_pair_list: non_empty_array_pair_list ',' . array_pair

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 144
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 417 (possible_comma)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 145
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    array_pair                  go to state 539
    internal_functions_in_yacc  go to state 113


State 297

  461 array_pair_list: non_empty_array_pair_list possible_comma .

    $default  reduce using rule 461 (array_pair_list)


State 298

  291 anonymous_class: "class (T_CLASS)" @8 . ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    '('  shift, and go to state 226

    $default  reduce using rule 392 (ctor_arguments)

    argument_list   go to state 300
    ctor_arguments  go to state 540


State 299

  447 new_variable: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . simple_variable

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 82

    simple_variable  go to state 541


State 300

  393 ctor_arguments: argument_list .

    $default  reduce using rule 393 (ctor_arguments)


State 301

  292 new_expr: "new (T_NEW)" class_name_reference ctor_arguments .

    $default  reduce using rule 292 (new_expr)


State 302

  444 new_variable: new_variable '[' . optional_expr ']'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 420 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 542
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 303

  446 new_variable: new_variable "-> (T_OBJECT_OPERATOR)" . property_name

    "identifier (T_STRING)"  shift, and go to state 515
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 516
    '$'                      shift, and go to state 82

    simple_variable  go to state 517
    property_name    go to state 543


State 304

  448 new_variable: new_variable ":: (T_PAAMAYIM_NEKUDOTAYIM)" . simple_variable

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 82

    simple_variable  go to state 544


State 305

  445 new_variable: new_variable '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 545
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 306

  237 static_var: "variable (T_VARIABLE)" '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 546
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 307

  234 static_var_list: static_var_list ',' . static_var

    "variable (T_VARIABLE)"  shift, and go to state 157

    static_var  go to state 547


State 308

  140 statement: "static (T_STATIC)" static_var_list ';' .

    $default  reduce using rule 140 (statement)


State 309

  368 expr_without_variable: "static (T_STATIC)" function returns_ref . backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 548


State 310

  388 exit_expr: '(' optional_expr . ')'

    ')'  shift, and go to state 549


State 311

  204 if_stmt_without_else: "if (T_IF)" '(' expr . ')' statement
  208 alt_if_stmt_without_else: "if (T_IF)" '(' expr . ')' ':' inner_statement_list
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 550


State 312

  283 echo_expr_list: echo_expr_list ',' . echo_expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    echo_expr                   go to state 551
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 167
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 313

  141 statement: "echo (T_ECHO)" echo_expr_list ';' .

    $default  reduce using rule 141 (statement)


State 314

  133 statement: "do (T_DO)" statement "while (T_WHILE)" . '(' expr ')' ';'

    '('  shift, and go to state 552


State 315

  132 statement: "while (T_WHILE)" '(' expr . ')' while_statement
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 553


State 316

  134 statement: "for (T_FOR)" '(' for_exprs . ';' for_exprs ';' for_exprs ')' for_statement

    ';'  shift, and go to state 554


State 317

  287 for_exprs: non_empty_for_exprs .
  288 non_empty_for_exprs: non_empty_for_exprs . ',' expr

    ','  shift, and go to state 555

    $default  reduce using rule 287 (for_exprs)


State 318

  289 non_empty_for_exprs: expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 289 (non_empty_for_exprs)


State 319

  145 statement: "foreach (T_FOREACH)" '(' expr . "as (T_AS)" foreach_variable ')' foreach_statement
  146          | "foreach (T_FOREACH)" '(' expr . "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    "as (T_AS)"                   shift, and go to state 556


State 320

  119 const_list: const_list . ',' const_decl
  148 statement: "declare (T_DECLARE)" '(' const_list . ')' $@3 declare_statement

    ','  shift, and go to state 326
    ')'  shift, and go to state 557


State 321

  135 statement: "switch (T_SWITCH)" '(' expr . ')' switch_case_list
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 558


State 322

  136 statement: "break (T_BREAK)" optional_expr ';' .

    $default  reduce using rule 136 (statement)


State 323

  137 statement: "continue (T_CONTINUE)" optional_expr ';' .

    $default  reduce using rule 137 (statement)


State 324

  152 statement: "goto (T_GOTO)" "identifier (T_STRING)" ';' .

    $default  reduce using rule 152 (statement)


State 325

  282 const_decl: "identifier (T_STRING)" '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 559
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 326

  119 const_list: const_list ',' . const_decl

    "identifier (T_STRING)"  shift, and go to state 178

    const_decl  go to state 560


State 327

  100 top_statement: "const (T_CONST)" const_list ';' .

    $default  reduce using rule 100 (top_statement)


State 328

  138 statement: "return (T_RETURN)" optional_expr ';' .

    $default  reduce using rule 138 (statement)


State 329

  121 inner_statement_list: inner_statement_list . inner_statement
  150 statement: "try (T_TRY)" '{' inner_statement_list . '}' catch_list finally_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 561
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 330

  151 statement: "throw (T_THROW)" expr ';' .

    $default  reduce using rule 151 (statement)


State 331

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  106 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name . "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'
  115 unprefixed_use_declaration: namespace_name .
  116                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 562

    $default  reduce using rule 115 (unprefixed_use_declaration)


State 332

  118 use_declaration: "\\ (T_NS_SEPARATOR)" unprefixed_use_declaration .

    $default  reduce using rule 118 (use_declaration)


State 333

  116 unprefixed_use_declaration: namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 563


State 334

   81 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"
  105 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" . '{' inline_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 386
    '{'                      shift, and go to state 564


State 335

  104 group_use_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'
  118 use_declaration: "\\ (T_NS_SEPARATOR)" . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 565
    unprefixed_use_declaration  go to state 332


State 336

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  103 group_use_declaration: namespace_name . "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'
  115 unprefixed_use_declaration: namespace_name .
  116                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 566

    $default  reduce using rule 115 (unprefixed_use_declaration)


State 337

   97 top_statement: "use (T_USE)" use_type group_use_declaration . ';'

    ';'  shift, and go to state 567


State 338

   99 top_statement: "use (T_USE)" use_type use_declarations . ';'
  111 use_declarations: use_declarations . ',' use_declaration

    ','  shift, and go to state 340
    ';'  shift, and go to state 568


State 339

   96 top_statement: "use (T_USE)" mixed_group_use_declaration ';' .

    $default  reduce using rule 96 (top_statement)


State 340

  111 use_declarations: use_declarations ',' . use_declaration

    "identifier (T_STRING)"  shift, and go to state 115
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 569

    namespace_name              go to state 570
    unprefixed_use_declaration  go to state 191
    use_declaration             go to state 571


State 341

   98 top_statement: "use (T_USE)" use_declarations ';' .

    $default  reduce using rule 98 (top_statement)


State 342

  231 global_var_list: global_var_list ',' . global_var

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 82

    global_var       go to state 572
    simple_variable  go to state 195


State 343

  139 statement: "global (T_GLOBAL)" global_var_list ';' .

    $default  reduce using rule 139 (statement)


State 344

  144 statement: "unset (T_UNSET)" '(' unset_variables . ')' ';'
  159 unset_variables: unset_variables . ',' unset_variable

    ','  shift, and go to state 573
    ')'  shift, and go to state 574


State 345

  158 unset_variables: unset_variable .

    $default  reduce using rule 158 (unset_variables)


State 346

  160 unset_variable: variable .
  423 dereferencable: variable .

    ','       reduce using rule 160 (unset_variable)
    ')'       reduce using rule 160 (unset_variable)
    $default  reduce using rule 423 (dereferencable)


State 347

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  491 isset_variable: expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 491 (isset_variable)


State 348

  482 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables . ')'
  490 isset_variables: isset_variables . ',' isset_variable

    ','  shift, and go to state 575
    ')'  shift, and go to state 576


State 349

  489 isset_variables: isset_variable .

    $default  reduce using rule 489 (isset_variables)


State 350

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  483 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 577


State 351

   90 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 578


State 352

  169 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" . extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 579

    $default  reduce using rule 178 (extends_from)

    extends_from  go to state 580


State 353

  175 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 581


State 354

  177 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" . interface_extends_list backup_doc_comment '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 582

    $default  reduce using rule 180 (interface_extends_list)

    interface_extends_list  go to state 583


State 355

  458 assignment_list_element: "list (T_LIST)" . '(' assignment_list ')'

    '('  shift, and go to state 584


State 356

  423 dereferencable: variable .
  457 assignment_list_element: variable .

    ','       reduce using rule 457 (assignment_list_element)
    ')'       reduce using rule 457 (assignment_list_element)
    $default  reduce using rule 423 (dereferencable)


State 357

  294 expr_without_variable: "list (T_LIST)" '(' assignment_list . ')' '=' expr
  455 assignment_list: assignment_list . ',' assignment_list_element

    ','  shift, and go to state 585
    ')'  shift, and go to state 586


State 358

  456 assignment_list: assignment_list_element .

    $default  reduce using rule 456 (assignment_list)


State 359

  394 dereferencable_scalar: "array (T_ARRAY)" '(' array_pair_list . ')'

    ')'  shift, and go to state 587


State 360

  473 encaps_var: "variable (T_VARIABLE)" '[' . encaps_var_offset ']'

    "identifier (T_STRING)"  shift, and go to state 588
    "variable (T_VARIABLE)"  shift, and go to state 589
    "number (T_NUM_STRING)"  shift, and go to state 590

    encaps_var_offset  go to state 591


State 361

  474 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 592


State 362

  407 scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 407 (scalar)


State 363

  471 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var .

    $default  reduce using rule 471 (encaps_list)


State 364

  476 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" . '}'
  477           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" . '[' expr ']' '}'

    '['  shift, and go to state 593
    '}'  shift, and go to state 594


State 365

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  475 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 595


State 366

  423 dereferencable: variable .
  478 encaps_var: "{$ (T_CURLY_OPEN)" variable . '}'

    '}'  shift, and go to state 596

    $default  reduce using rule 423 (dereferencable)


State 367

  469 encaps_list: encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .

    $default  reduce using rule 469 (encaps_list)


State 368

  410 scalar: "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 410 (scalar)


State 369

  468 encaps_list: encaps_list encaps_var .

    $default  reduce using rule 468 (encaps_list)


State 370

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   83 name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225

    $default  reduce using rule 83 (name)


State 371

   91 top_statement: "namespace (T_NAMESPACE)" namespace_name ';' .

    $default  reduce using rule 91 (top_statement)


State 372

   93 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 . '{' top_statement_list '}'

    '{'  shift, and go to state 597


State 373

   95 top_statement: "namespace (T_NAMESPACE)" $@2 '{' . top_statement_list '}'

    $default  reduce using rule 79 (top_statement_list)

    top_statement_list  go to state 598


State 374

  345 expr_without_variable: '(' expr ')' .
  424 dereferencable: '(' expr ')' .
  427 callable_expr: '(' expr ')' .

    '['                            reduce using rule 424 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 424 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 424 (dereferencable)
    '('                            reduce using rule 427 (callable_expr)
    '{'                            reduce using rule 424 (dereferencable)
    $default                       reduce using rule 345 (expr_without_variable)


State 375

  128 inner_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 599


State 376

  129 statement: '{' inner_statement_list '}' .

    $default  reduce using rule 129 (statement)


State 377

  121 inner_statement_list: inner_statement_list inner_statement .

    $default  reduce using rule 121 (inner_statement_list)


State 378

  123 inner_statement: statement .

    $default  reduce using rule 123 (inner_statement)


State 379

  124 inner_statement: function_declaration_statement .

    $default  reduce using rule 124 (inner_statement)


State 380

  125 inner_statement: class_declaration_statement .

    $default  reduce using rule 125 (inner_statement)


State 381

  126 inner_statement: trait_declaration_statement .

    $default  reduce using rule 126 (inner_statement)


State 382

  127 inner_statement: interface_declaration_statement .

    $default  reduce using rule 127 (inner_statement)


State 383

  361 expr_without_variable: '`' backticks_expr '`' .

    $default  reduce using rule 361 (expr_without_variable)


State 384

  409 scalar: '"' encaps_list '"' .

    $default  reduce using rule 409 (scalar)


State 385

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  439 simple_variable: '$' '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 600


State 386

   81 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 81 (namespace_name)


State 387

  230 argument: "... (T_ELLIPSIS)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 601
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 388

  225 argument_list: '(' ')' .

    $default  reduce using rule 225 (argument_list)


State 389

  226 argument_list: '(' non_empty_argument_list . ')'
  228 non_empty_argument_list: non_empty_argument_list . ',' argument

    ','  shift, and go to state 602
    ')'  shift, and go to state 603


State 390

  227 non_empty_argument_list: argument .

    $default  reduce using rule 227 (non_empty_argument_list)


State 391

  229 argument: expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 229 (argument)


State 392

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 . "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 604


State 393

  205 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" '(' . expr ')' statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 605
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 394

  207 if_stmt: if_stmt_without_else "else (T_ELSE)" statement .

    $default  reduce using rule 207 (if_stmt)


State 395

  209 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' . expr ')' ':' inner_statement_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 606
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 396

  211 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" ':' . inner_statement_list "endif (T_ENDIF)" ';'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 607


State 397

  210 alt_if_stmt: alt_if_stmt_without_else "endif (T_ENDIF)" ';' .

    $default  reduce using rule 210 (alt_if_stmt)


State 398

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" . backup_doc_comment '(' parameter_list ')' return_type '{' inner_statement_list '}'

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 608


State 399

  367 expr_without_variable: function returns_ref backup_doc_comment . '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    '('  shift, and go to state 609


State 400

    2 reserved_non_modifiers: "include (T_INCLUDE)" .

    $default  reduce using rule 2 (reserved_non_modifiers)


State 401

    3 reserved_non_modifiers: "include_once (T_INCLUDE_ONCE)" .

    $default  reduce using rule 3 (reserved_non_modifiers)


State 402

    4 reserved_non_modifiers: "eval (T_EVAL)" .

    $default  reduce using rule 4 (reserved_non_modifiers)


State 403

    5 reserved_non_modifiers: "require (T_REQUIRE)" .

    $default  reduce using rule 5 (reserved_non_modifiers)


State 404

    6 reserved_non_modifiers: "require_once (T_REQUIRE_ONCE)" .

    $default  reduce using rule 6 (reserved_non_modifiers)


State 405

    7 reserved_non_modifiers: "or (T_LOGICAL_OR)" .

    $default  reduce using rule 7 (reserved_non_modifiers)


State 406

    8 reserved_non_modifiers: "xor (T_LOGICAL_XOR)" .

    $default  reduce using rule 8 (reserved_non_modifiers)


State 407

    9 reserved_non_modifiers: "and (T_LOGICAL_AND)" .

    $default  reduce using rule 9 (reserved_non_modifiers)


State 408

   45 reserved_non_modifiers: "print (T_PRINT)" .

    $default  reduce using rule 45 (reserved_non_modifiers)


State 409

   46 reserved_non_modifiers: "yield (T_YIELD)" .

    $default  reduce using rule 46 (reserved_non_modifiers)


State 410

   10 reserved_non_modifiers: "instanceof (T_INSTANCEOF)" .

    $default  reduce using rule 10 (reserved_non_modifiers)


State 411

   11 reserved_non_modifiers: "new (T_NEW)" .

    $default  reduce using rule 11 (reserved_non_modifiers)


State 412

   12 reserved_non_modifiers: "clone (T_CLONE)" .

    $default  reduce using rule 12 (reserved_non_modifiers)


State 413

   15 reserved_non_modifiers: "elseif (T_ELSEIF)" .

    $default  reduce using rule 15 (reserved_non_modifiers)


State 414

   16 reserved_non_modifiers: "else (T_ELSE)" .

    $default  reduce using rule 16 (reserved_non_modifiers)


State 415

   17 reserved_non_modifiers: "endif (T_ENDIF)" .

    $default  reduce using rule 17 (reserved_non_modifiers)


State 416

   70 semi_reserved: "static (T_STATIC)" .

    $default  reduce using rule 70 (semi_reserved)


State 417

   71 semi_reserved: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 71 (semi_reserved)


State 418

   72 semi_reserved: "final (T_FINAL)" .

    $default  reduce using rule 72 (semi_reserved)


State 419

   73 semi_reserved: "private (T_PRIVATE)" .

    $default  reduce using rule 73 (semi_reserved)


State 420

   74 semi_reserved: "protected (T_PROTECTED)" .

    $default  reduce using rule 74 (semi_reserved)


State 421

   75 semi_reserved: "public (T_PUBLIC)" .

    $default  reduce using rule 75 (semi_reserved)


State 422

   76 identifier: "identifier (T_STRING)" .

    $default  reduce using rule 76 (identifier)


State 423

   13 reserved_non_modifiers: "exit (T_EXIT)" .

    $default  reduce using rule 13 (reserved_non_modifiers)


State 424

   14 reserved_non_modifiers: "if (T_IF)" .

    $default  reduce using rule 14 (reserved_non_modifiers)


State 425

   18 reserved_non_modifiers: "echo (T_ECHO)" .

    $default  reduce using rule 18 (reserved_non_modifiers)


State 426

   19 reserved_non_modifiers: "do (T_DO)" .

    $default  reduce using rule 19 (reserved_non_modifiers)


State 427

   20 reserved_non_modifiers: "while (T_WHILE)" .

    $default  reduce using rule 20 (reserved_non_modifiers)


State 428

   21 reserved_non_modifiers: "endwhile (T_ENDWHILE)" .

    $default  reduce using rule 21 (reserved_non_modifiers)


State 429

   22 reserved_non_modifiers: "for (T_FOR)" .

    $default  reduce using rule 22 (reserved_non_modifiers)


State 430

   23 reserved_non_modifiers: "endfor (T_ENDFOR)" .

    $default  reduce using rule 23 (reserved_non_modifiers)


State 431

   24 reserved_non_modifiers: "foreach (T_FOREACH)" .

    $default  reduce using rule 24 (reserved_non_modifiers)


State 432

   25 reserved_non_modifiers: "endforeach (T_ENDFOREACH)" .

    $default  reduce using rule 25 (reserved_non_modifiers)


State 433

   26 reserved_non_modifiers: "declare (T_DECLARE)" .

    $default  reduce using rule 26 (reserved_non_modifiers)


State 434

   27 reserved_non_modifiers: "enddeclare (T_ENDDECLARE)" .

    $default  reduce using rule 27 (reserved_non_modifiers)


State 435

   28 reserved_non_modifiers: "as (T_AS)" .

    $default  reduce using rule 28 (reserved_non_modifiers)


State 436

   48 reserved_non_modifiers: "switch (T_SWITCH)" .

    $default  reduce using rule 48 (reserved_non_modifiers)


State 437

   49 reserved_non_modifiers: "endswitch (T_ENDSWITCH)" .

    $default  reduce using rule 49 (reserved_non_modifiers)


State 438

   50 reserved_non_modifiers: "case (T_CASE)" .

    $default  reduce using rule 50 (reserved_non_modifiers)


State 439

   51 reserved_non_modifiers: "default (T_DEFAULT)" .

    $default  reduce using rule 51 (reserved_non_modifiers)


State 440

   52 reserved_non_modifiers: "break (T_BREAK)" .

    $default  reduce using rule 52 (reserved_non_modifiers)


State 441

   40 reserved_non_modifiers: "continue (T_CONTINUE)" .

    $default  reduce using rule 40 (reserved_non_modifiers)


State 442

   41 reserved_non_modifiers: "goto (T_GOTO)" .

    $default  reduce using rule 41 (reserved_non_modifiers)


State 443

   42 reserved_non_modifiers: "function (T_FUNCTION)" .

    $default  reduce using rule 42 (reserved_non_modifiers)


State 444

   43 reserved_non_modifiers: "const (T_CONST)" .

    $default  reduce using rule 43 (reserved_non_modifiers)


State 445

   44 reserved_non_modifiers: "return (T_RETURN)" .

    $default  reduce using rule 44 (reserved_non_modifiers)


State 446

   29 reserved_non_modifiers: "try (T_TRY)" .

    $default  reduce using rule 29 (reserved_non_modifiers)


State 447

   30 reserved_non_modifiers: "catch (T_CATCH)" .

    $default  reduce using rule 30 (reserved_non_modifiers)


State 448

   31 reserved_non_modifiers: "finally (T_FINALLY)" .

    $default  reduce using rule 31 (reserved_non_modifiers)


State 449

   32 reserved_non_modifiers: "throw (T_THROW)" .

    $default  reduce using rule 32 (reserved_non_modifiers)


State 450

   33 reserved_non_modifiers: "use (T_USE)" .

    $default  reduce using rule 33 (reserved_non_modifiers)


State 451

   34 reserved_non_modifiers: "insteadof (T_INSTEADOF)" .

    $default  reduce using rule 34 (reserved_non_modifiers)


State 452

   35 reserved_non_modifiers: "global (T_GLOBAL)" .

    $default  reduce using rule 35 (reserved_non_modifiers)


State 453

   36 reserved_non_modifiers: "var (T_VAR)" .

    $default  reduce using rule 36 (reserved_non_modifiers)


State 454

   37 reserved_non_modifiers: "unset (T_UNSET)" .

    $default  reduce using rule 37 (reserved_non_modifiers)


State 455

   38 reserved_non_modifiers: "isset (T_ISSET)" .

    $default  reduce using rule 38 (reserved_non_modifiers)


State 456

   39 reserved_non_modifiers: "empty (T_EMPTY)" .

    $default  reduce using rule 39 (reserved_non_modifiers)


State 457

   60 reserved_non_modifiers: "class (T_CLASS)" .

    $default  reduce using rule 60 (reserved_non_modifiers)


State 458

   58 reserved_non_modifiers: "trait (T_TRAIT)" .

    $default  reduce using rule 58 (reserved_non_modifiers)


State 459

   59 reserved_non_modifiers: "interface (T_INTERFACE)" .

    $default  reduce using rule 59 (reserved_non_modifiers)


State 460

   55 reserved_non_modifiers: "extends (T_EXTENDS)" .

    $default  reduce using rule 55 (reserved_non_modifiers)


State 461

   56 reserved_non_modifiers: "implements (T_IMPLEMENTS)" .

    $default  reduce using rule 56 (reserved_non_modifiers)


State 462

   47 reserved_non_modifiers: "list (T_LIST)" .

    $default  reduce using rule 47 (reserved_non_modifiers)


State 463

   53 reserved_non_modifiers: "array (T_ARRAY)" .

    $default  reduce using rule 53 (reserved_non_modifiers)


State 464

   54 reserved_non_modifiers: "callable (T_CALLABLE)" .

    $default  reduce using rule 54 (reserved_non_modifiers)


State 465

   65 reserved_non_modifiers: "__LINE__ (T_LINE)" .

    $default  reduce using rule 65 (reserved_non_modifiers)


State 466

   66 reserved_non_modifiers: "__FILE__ (T_FILE)" .

    $default  reduce using rule 66 (reserved_non_modifiers)


State 467

   67 reserved_non_modifiers: "__DIR__ (T_DIR)" .

    $default  reduce using rule 67 (reserved_non_modifiers)


State 468

   61 reserved_non_modifiers: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 61 (reserved_non_modifiers)


State 469

   62 reserved_non_modifiers: "__TRAIT__ (T_TRAIT_C)" .

    $default  reduce using rule 62 (reserved_non_modifiers)


State 470

   64 reserved_non_modifiers: "__METHOD__ (T_METHOD_C)" .

    $default  reduce using rule 64 (reserved_non_modifiers)


State 471

   63 reserved_non_modifiers: "__FUNCTION__ (T_FUNC_C)" .

    $default  reduce using rule 63 (reserved_non_modifiers)


State 472

   57 reserved_non_modifiers: "namespace (T_NAMESPACE)" .

    $default  reduce using rule 57 (reserved_non_modifiers)


State 473

   68 reserved_non_modifiers: "__NAMESPACE__ (T_NS_C)" .

    $default  reduce using rule 68 (reserved_non_modifiers)


State 474

  450 member_name: '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 610
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 475

   69 semi_reserved: reserved_non_modifiers .

    $default  reduce using rule 69 (semi_reserved)


State 476

   77 identifier: semi_reserved .

    $default  reduce using rule 77 (identifier)


State 477

  414 constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier .
  449 member_name: identifier .

    '('       reduce using rule 449 (member_name)
    $default  reduce using rule 414 (constant)


State 478

  441 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable .
  451 member_name: simple_variable .

    '('       reduce using rule 451 (member_name)
    $default  reduce using rule 441 (static_member)


State 479

  380 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name . argument_list

    '('  shift, and go to state 226

    argument_list  go to state 611


State 480

  431 callable_variable: constant '[' optional_expr . ']'

    ']'  shift, and go to state 612


State 481

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  316                      | expr "or (T_LOGICAL_OR)" expr .
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 316 (expr_without_variable)


State 482

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  318                      | expr "xor (T_LOGICAL_XOR)" expr .
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 318 (expr_without_variable)


State 483

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  317                      | expr "and (T_LOGICAL_AND)" expr .
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 317 (expr_without_variable)


State 484

  348 expr_without_variable: expr '?' ':' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 613
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 485

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  347                      | expr '?' expr . ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    ':'                           shift, and go to state 614
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267


State 486

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  349                      | expr "?? (T_COALESCE)" expr .

    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 349 (expr_without_variable)


State 487

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  314                      | expr "|| (T_BOOLEAN_OR)" expr .
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 314 (expr_without_variable)


State 488

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  315                      | expr "&& (T_BOOLEAN_AND)" expr .
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 315 (expr_without_variable)


State 489

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  319                      | expr '|' expr .
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 319 (expr_without_variable)


State 490

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  321                      | expr '^' expr .
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 321 (expr_without_variable)


State 491

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  320                      | expr '&' expr .
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 320 (expr_without_variable)


State 492

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  337                      | expr "== (T_IS_EQUAL)" expr .
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 337 (expr_without_variable)


State 493

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  338                      | expr "!= (T_IS_NOT_EQUAL)" expr .
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 338 (expr_without_variable)


State 494

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  335                      | expr "=== (T_IS_IDENTICAL)" expr .
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 335 (expr_without_variable)


State 495

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  336                      | expr "!== (T_IS_NOT_IDENTICAL)" expr .
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 336 (expr_without_variable)


State 496

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  343                      | expr "<=> (T_SPACESHIP)" expr .
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 343 (expr_without_variable)


State 497

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  339                      | expr '<' expr .
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "<< (T_SL)"                  shift, and go to state 258
    ">> (T_SR)"                  shift, and go to state 259
    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    '<'                           error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 339 (expr_without_variable)


State 498

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  340                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr .
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "<< (T_SL)"                  shift, and go to state 258
    ">> (T_SR)"                  shift, and go to state 259
    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    '<'                           error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 340 (expr_without_variable)


State 499

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  341                      | expr '>' expr .
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "<< (T_SL)"                  shift, and go to state 258
    ">> (T_SR)"                  shift, and go to state 259
    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    '<'                           error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 341 (expr_without_variable)


State 500

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  342                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr .
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "<< (T_SL)"                  shift, and go to state 258
    ">> (T_SR)"                  shift, and go to state 259
    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    '<'                           error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 342 (expr_without_variable)


State 501

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  329                      | expr "<< (T_SL)" expr .
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 329 (expr_without_variable)


State 502

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  330                      | expr ">> (T_SR)" expr .
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 330 (expr_without_variable)


State 503

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  323                      | expr '+' expr .
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 323 (expr_without_variable)


State 504

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  324                      | expr '-' expr .
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 324 (expr_without_variable)


State 505

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  322                      | expr '.' expr .
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 322 (expr_without_variable)


State 506

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  325                      | expr '*' expr .
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 325 (expr_without_variable)


State 507

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  327                      | expr '/' expr .
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 327 (expr_without_variable)


State 508

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  328                      | expr '%' expr .
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 328 (expr_without_variable)


State 509

  344 expr_without_variable: expr "instanceof (T_INSTANCEOF)" class_name_reference .

    $default  reduce using rule 344 (expr_without_variable)


State 510

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  326                      | expr "** (T_POW)" expr .
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 326 (expr_without_variable)


State 511

  415 constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier .
  449 member_name: identifier .

    '('       reduce using rule 449 (member_name)
    $default  reduce using rule 415 (constant)


State 512

  442 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable .
  451 member_name: simple_variable .

    '('       reduce using rule 451 (member_name)
    $default  reduce using rule 442 (static_member)


State 513

  381 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name . argument_list

    '('  shift, and go to state 226

    argument_list  go to state 615


State 514

  430 callable_variable: dereferencable '[' optional_expr . ']'

    ']'  shift, and go to state 616


State 515

  452 property_name: "identifier (T_STRING)" .

    $default  reduce using rule 452 (property_name)


State 516

  453 property_name: '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 617
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 517

  454 property_name: simple_variable .

    $default  reduce using rule 454 (property_name)


State 518

  433 callable_variable: dereferencable "-> (T_OBJECT_OPERATOR)" property_name . argument_list
  437 variable: dereferencable "-> (T_OBJECT_OPERATOR)" property_name .

    '('  shift, and go to state 226

    $default  reduce using rule 437 (variable)

    argument_list  go to state 618


State 519

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  432 callable_variable: dereferencable '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 619


State 520

  296 expr_without_variable: variable '=' '&' . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 620
    simple_variable        go to state 111
    static_member          go to state 112


State 521

  295 expr_without_variable: variable '=' expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 295 (expr_without_variable)


State 522

  298 expr_without_variable: variable "+= (T_PLUS_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 298 (expr_without_variable)


State 523

  299 expr_without_variable: variable "-= (T_MINUS_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 299 (expr_without_variable)


State 524

  300 expr_without_variable: variable "*= (T_MUL_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 300 (expr_without_variable)


State 525

  302 expr_without_variable: variable "/= (T_DIV_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 302 (expr_without_variable)


State 526

  303 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 303 (expr_without_variable)


State 527

  304 expr_without_variable: variable "%= (T_MOD_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 304 (expr_without_variable)


State 528

  305 expr_without_variable: variable "&= (T_AND_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 305 (expr_without_variable)


State 529

  306 expr_without_variable: variable "|= (T_OR_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 306 (expr_without_variable)


State 530

  307 expr_without_variable: variable "^= (T_XOR_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 307 (expr_without_variable)


State 531

  308 expr_without_variable: variable "<<= (T_SL_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 308 (expr_without_variable)


State 532

  309 expr_without_variable: variable ">>= (T_SR_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 309 (expr_without_variable)


State 533

  301 expr_without_variable: variable "**= (T_POW_EQUAL)" expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 301 (expr_without_variable)


State 534

  486 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr ')' .

    $default  reduce using rule 486 (internal_functions_in_yacc)


State 535

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  365                      | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr .

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 365 (expr_without_variable)


State 536

  424 dereferencable: '(' expr ')' .
  427 callable_expr: '(' expr ')' .

    '('       reduce using rule 427 (callable_expr)
    $default  reduce using rule 424 (dereferencable)


State 537

  466 array_pair: expr "=> (T_DOUBLE_ARROW)" '&' . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 621
    simple_variable        go to state 111
    static_member          go to state 112


State 538

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  464 array_pair: expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 464 (array_pair)


State 539

  462 non_empty_array_pair_list: non_empty_array_pair_list ',' array_pair .

    $default  reduce using rule 462 (non_empty_array_pair_list)


State 540

  291 anonymous_class: "class (T_CLASS)" @8 ctor_arguments . extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 579

    $default  reduce using rule 178 (extends_from)

    extends_from  go to state 622


State 541

  447 new_variable: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable .

    $default  reduce using rule 447 (new_variable)


State 542

  444 new_variable: new_variable '[' optional_expr . ']'

    ']'  shift, and go to state 623


State 543

  446 new_variable: new_variable "-> (T_OBJECT_OPERATOR)" property_name .

    $default  reduce using rule 446 (new_variable)


State 544

  448 new_variable: new_variable ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable .

    $default  reduce using rule 448 (new_variable)


State 545

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  445 new_variable: new_variable '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 624


State 546

  237 static_var: "variable (T_VARIABLE)" '=' expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 237 (static_var)


State 547

  234 static_var_list: static_var_list ',' static_var .

    $default  reduce using rule 234 (static_var_list)


State 548

  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment . '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    '('  shift, and go to state 625


State 549

  388 exit_expr: '(' optional_expr ')' .

    $default  reduce using rule 388 (exit_expr)


State 550

  204 if_stmt_without_else: "if (T_IF)" '(' expr ')' . statement
  208 alt_if_stmt_without_else: "if (T_IF)" '(' expr ')' . ':' inner_statement_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 626
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 627
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 551

  283 echo_expr_list: echo_expr_list ',' echo_expr .

    $default  reduce using rule 283 (echo_expr_list)


State 552

  133 statement: "do (T_DO)" statement "while (T_WHILE)" '(' . expr ')' ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 628
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 553

  132 statement: "while (T_WHILE)" '(' expr ')' . while_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 629
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 630
    while_statement             go to state 631
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 554

  134 statement: "for (T_FOR)" '(' for_exprs ';' . for_exprs ';' for_exprs ')' for_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 286 (for_exprs)

    namespace_name              go to state 83
    name                        go to state 84
    for_exprs                   go to state 632
    non_empty_for_exprs         go to state 317
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 318
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 555

  288 non_empty_for_exprs: non_empty_for_exprs ',' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 633
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 556

  145 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" . foreach_variable ')' foreach_statement
  146          | "foreach (T_FOREACH)" '(' expr "as (T_AS)" . foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

    '&'                                           shift, and go to state 634
    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 635
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    foreach_variable       go to state 636
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 637
    simple_variable        go to state 111
    static_member          go to state 112


State 557

  148 statement: "declare (T_DECLARE)" '(' const_list ')' . $@3 declare_statement

    $default  reduce using rule 147 ($@3)

    $@3  go to state 638


State 558

  135 statement: "switch (T_SWITCH)" '(' expr ')' . switch_case_list

    ':'  shift, and go to state 639
    '{'  shift, and go to state 640

    switch_case_list  go to state 641


State 559

  282 const_decl: "identifier (T_STRING)" '=' expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 282 (const_decl)


State 560

  119 const_list: const_list ',' const_decl .

    $default  reduce using rule 119 (const_list)


State 561

  150 statement: "try (T_TRY)" '{' inner_statement_list '}' . catch_list finally_statement

    $default  reduce using rule 154 (catch_list)

    catch_list  go to state 642


State 562

   81 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"
  106 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" . '{' inline_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 386
    '{'                      shift, and go to state 643


State 563

  116 unprefixed_use_declaration: namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 116 (unprefixed_use_declaration)


State 564

  105 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' . inline_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 115
    "function (T_FUNCTION)"  shift, and go to state 184
    "const (T_CONST)"        shift, and go to state 185

    namespace_name              go to state 570
    use_type                    go to state 644
    inline_use_declarations     go to state 645
    inline_use_declaration      go to state 646
    unprefixed_use_declaration  go to state 647


State 565

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  104 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name . "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'
  115 unprefixed_use_declaration: namespace_name .
  116                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 648

    $default  reduce using rule 115 (unprefixed_use_declaration)


State 566

   81 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"
  103 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" . '{' unprefixed_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 386
    '{'                      shift, and go to state 649


State 567

   97 top_statement: "use (T_USE)" use_type group_use_declaration ';' .

    $default  reduce using rule 97 (top_statement)


State 568

   99 top_statement: "use (T_USE)" use_type use_declarations ';' .

    $default  reduce using rule 99 (top_statement)


State 569

  118 use_declaration: "\\ (T_NS_SEPARATOR)" . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 570
    unprefixed_use_declaration  go to state 332


State 570

   81 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  115 unprefixed_use_declaration: namespace_name .
  116                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225

    $default  reduce using rule 115 (unprefixed_use_declaration)


State 571

  111 use_declarations: use_declarations ',' use_declaration .

    $default  reduce using rule 111 (use_declarations)


State 572

  231 global_var_list: global_var_list ',' global_var .

    $default  reduce using rule 231 (global_var_list)


State 573

  159 unset_variables: unset_variables ',' . unset_variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    unset_variable         go to state 650
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 346
    simple_variable        go to state 111
    static_member          go to state 112


State 574

  144 statement: "unset (T_UNSET)" '(' unset_variables ')' . ';'

    ';'  shift, and go to state 651


State 575

  490 isset_variables: isset_variables ',' . isset_variable

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 347
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113
    isset_variable              go to state 652


State 576

  482 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')' .

    $default  reduce using rule 482 (internal_functions_in_yacc)


State 577

  483 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr ')' .

    $default  reduce using rule 483 (internal_functions_in_yacc)


State 578

   90 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 90 (top_statement)


State 579

  179 extends_from: "extends (T_EXTENDS)" . name

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 653


State 580

  169 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from . implements_list backup_doc_comment '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 654

    $default  reduce using rule 182 (implements_list)

    implements_list  go to state 655


State 581

  175 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 656


State 582

  181 interface_extends_list: "extends (T_EXTENDS)" . name_list

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 657
    name_list       go to state 658


State 583

  177 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 659


State 584

  458 assignment_list_element: "list (T_LIST)" '(' . assignment_list ')'

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 355
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    $default  reduce using rule 459 (assignment_list_element)

    namespace_name           go to state 83
    name                     go to state 84
    function_call            go to state 100
    class_name               go to state 101
    dereferencable_scalar    go to state 132
    constant                 go to state 133
    variable_class_name      go to state 106
    dereferencable           go to state 107
    callable_expr            go to state 108
    callable_variable        go to state 109
    variable                 go to state 356
    simple_variable          go to state 111
    static_member            go to state 112
    assignment_list          go to state 660
    assignment_list_element  go to state 358


State 585

  455 assignment_list: assignment_list ',' . assignment_list_element

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 355
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    $default  reduce using rule 459 (assignment_list_element)

    namespace_name           go to state 83
    name                     go to state 84
    function_call            go to state 100
    class_name               go to state 101
    dereferencable_scalar    go to state 132
    constant                 go to state 133
    variable_class_name      go to state 106
    dereferencable           go to state 107
    callable_expr            go to state 108
    callable_variable        go to state 109
    variable                 go to state 356
    simple_variable          go to state 111
    static_member            go to state 112
    assignment_list_element  go to state 661


State 586

  294 expr_without_variable: "list (T_LIST)" '(' assignment_list ')' . '=' expr

    '='  shift, and go to state 662


State 587

  394 dereferencable_scalar: "array (T_ARRAY)" '(' array_pair_list ')' .

    $default  reduce using rule 394 (dereferencable_scalar)


State 588

  479 encaps_var_offset: "identifier (T_STRING)" .

    $default  reduce using rule 479 (encaps_var_offset)


State 589

  481 encaps_var_offset: "variable (T_VARIABLE)" .

    $default  reduce using rule 481 (encaps_var_offset)


State 590

  480 encaps_var_offset: "number (T_NUM_STRING)" .

    $default  reduce using rule 480 (encaps_var_offset)


State 591

  473 encaps_var: "variable (T_VARIABLE)" '[' encaps_var_offset . ']'

    ']'  shift, and go to state 663


State 592

  474 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 474 (encaps_var)


State 593

  477 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' . expr ']' '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 664
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 594

  476 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '}' .

    $default  reduce using rule 476 (encaps_var)


State 595

  475 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}' .

    $default  reduce using rule 475 (encaps_var)


State 596

  478 encaps_var: "{$ (T_CURLY_OPEN)" variable '}' .

    $default  reduce using rule 478 (encaps_var)


State 597

   93 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 '{' . top_statement_list '}'

    $default  reduce using rule 79 (top_statement_list)

    top_statement_list  go to state 665


State 598

   78 top_statement_list: top_statement_list . top_statement
   95 top_statement: "namespace (T_NAMESPACE)" $@2 '{' top_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "const (T_CONST)"                             shift, and go to state 51
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "use (T_USE)"                                 shift, and go to state 55
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 60
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 74
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 666
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    top_statement                    go to state 85
    statement                        go to state 86
    function_declaration_statement   go to state 87
    class_declaration_statement      go to state 88
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 91
    interface_declaration_statement  go to state 92
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 599

  128 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 667


State 600

  439 simple_variable: '$' '{' expr '}' .

    $default  reduce using rule 439 (simple_variable)


State 601

  230 argument: "... (T_ELLIPSIS)" expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 230 (argument)


State 602

  228 non_empty_argument_list: non_empty_argument_list ',' . argument

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    "... (T_ELLIPSIS)"                            shift, and go to state 387
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    argument                    go to state 668
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 391
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 603

  226 argument_list: '(' non_empty_argument_list ')' .

    $default  reduce using rule 226 (argument_list)


State 604

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" . extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 579

    $default  reduce using rule 178 (extends_from)

    extends_from  go to state 669


State 605

  205 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" '(' expr . ')' statement
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 670


State 606

  209 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr . ')' ':' inner_statement_list
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 671


State 607

  121 inner_statement_list: inner_statement_list . inner_statement
  211 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" ':' inner_statement_list . "endif (T_ENDIF)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "endif (T_ENDIF)"                             shift, and go to state 672
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 608

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment . '(' parameter_list ')' return_type '{' inner_statement_list '}'

    '('  shift, and go to state 673


State 609

  367 expr_without_variable: function returns_ref backup_doc_comment '(' . parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 674
    "callable (T_CALLABLE)"    shift, and go to state 675
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    ')'       reduce using rule 213 (parameter_list)
    $default  reduce using rule 218 (optional_type)

    namespace_name            go to state 83
    name                      go to state 676
    parameter_list            go to state 677
    non_empty_parameter_list  go to state 678
    parameter                 go to state 679
    optional_type             go to state 680
    type                      go to state 681


State 610

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  450 member_name: '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 682


State 611

  380 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list .

    $default  reduce using rule 380 (function_call)


State 612

  431 callable_variable: constant '[' optional_expr ']' .

    $default  reduce using rule 431 (callable_variable)


State 613

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  348                      | expr '?' ':' expr .
  349                      | expr . "?? (T_COALESCE)" expr

    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 348 (expr_without_variable)


State 614

  347 expr_without_variable: expr '?' expr ':' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 683
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 615

  381 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list .

    $default  reduce using rule 381 (function_call)


State 616

  430 callable_variable: dereferencable '[' optional_expr ']' .

    $default  reduce using rule 430 (callable_variable)


State 617

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  453 property_name: '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 684


State 618

  433 callable_variable: dereferencable "-> (T_OBJECT_OPERATOR)" property_name argument_list .

    $default  reduce using rule 433 (callable_variable)


State 619

  432 callable_variable: dereferencable '{' expr '}' .

    $default  reduce using rule 432 (callable_variable)


State 620

  296 expr_without_variable: variable '=' '&' variable .
  423 dereferencable: variable .

    '['                            reduce using rule 423 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 423 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 423 (dereferencable)
    '{'                            reduce using rule 423 (dereferencable)
    $default                       reduce using rule 296 (expr_without_variable)


State 621

  423 dereferencable: variable .
  466 array_pair: expr "=> (T_DOUBLE_ARROW)" '&' variable .

    ','       reduce using rule 466 (array_pair)
    ')'       reduce using rule 466 (array_pair)
    ']'       reduce using rule 466 (array_pair)
    $default  reduce using rule 423 (dereferencable)


State 622

  291 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from . implements_list backup_doc_comment '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 654

    $default  reduce using rule 182 (implements_list)

    implements_list  go to state 685


State 623

  444 new_variable: new_variable '[' optional_expr ']' .

    $default  reduce using rule 444 (new_variable)


State 624

  445 new_variable: new_variable '{' expr '}' .

    $default  reduce using rule 445 (new_variable)


State 625

  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment '(' . parameter_list ')' lexical_vars return_type '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 674
    "callable (T_CALLABLE)"    shift, and go to state 675
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    ')'       reduce using rule 213 (parameter_list)
    $default  reduce using rule 218 (optional_type)

    namespace_name            go to state 83
    name                      go to state 676
    parameter_list            go to state 686
    non_empty_parameter_list  go to state 678
    parameter                 go to state 679
    optional_type             go to state 680
    type                      go to state 681


State 626

  208 alt_if_stmt_without_else: "if (T_IF)" '(' expr ')' ':' . inner_statement_list

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 687


State 627

  204 if_stmt_without_else: "if (T_IF)" '(' expr ')' statement .

    $default  reduce using rule 204 (if_stmt_without_else)


State 628

  133 statement: "do (T_DO)" statement "while (T_WHILE)" '(' expr . ')' ';'
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 688


State 629

  203 while_statement: ':' . inner_statement_list "endwhile (T_ENDWHILE)" ';'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 689


State 630

  202 while_statement: statement .

    $default  reduce using rule 202 (while_statement)


State 631

  132 statement: "while (T_WHILE)" '(' expr ')' while_statement .

    $default  reduce using rule 132 (statement)


State 632

  134 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs . ';' for_exprs ')' for_statement

    ';'  shift, and go to state 690


State 633

  288 non_empty_for_exprs: non_empty_for_exprs ',' expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 288 (non_empty_for_exprs)


State 634

  185 foreach_variable: '&' . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 691
    simple_variable        go to state 111
    static_member          go to state 112


State 635

  186 foreach_variable: "list (T_LIST)" . '(' assignment_list ')'

    '('  shift, and go to state 692


State 636

  145 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable . ')' foreach_statement
  146          | "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable . "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 693
    ')'                    shift, and go to state 694


State 637

  184 foreach_variable: variable .
  423 dereferencable: variable .

    "=> (T_DOUBLE_ARROW)"  reduce using rule 184 (foreach_variable)
    ')'                    reduce using rule 184 (foreach_variable)
    $default               reduce using rule 423 (dereferencable)


State 638

  148 statement: "declare (T_DECLARE)" '(' const_list ')' $@3 . declare_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 695
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 696
    declare_statement           go to state 697
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 639

  195 switch_case_list: ':' . case_list "endswitch (T_ENDSWITCH)" ';'
  196                 | ':' . ';' case_list "endswitch (T_ENDSWITCH)" ';'

    ';'  shift, and go to state 698

    $default  reduce using rule 197 (case_list)

    case_list  go to state 699


State 640

  193 switch_case_list: '{' . case_list '}'
  194                 | '{' . ';' case_list '}'

    ';'  shift, and go to state 700

    $default  reduce using rule 197 (case_list)

    case_list  go to state 701


State 641

  135 statement: "switch (T_SWITCH)" '(' expr ')' switch_case_list .

    $default  reduce using rule 135 (statement)


State 642

  150 statement: "try (T_TRY)" '{' inner_statement_list '}' catch_list . finally_statement
  155 catch_list: catch_list . "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

    "catch (T_CATCH)"      shift, and go to state 702
    "finally (T_FINALLY)"  shift, and go to state 703

    $default  reduce using rule 156 (finally_statement)

    finally_statement  go to state 704


State 643

  106 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' . inline_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 115
    "function (T_FUNCTION)"  shift, and go to state 184
    "const (T_CONST)"        shift, and go to state 185

    namespace_name              go to state 570
    use_type                    go to state 644
    inline_use_declarations     go to state 705
    inline_use_declaration      go to state 646
    unprefixed_use_declaration  go to state 647


State 644

  114 inline_use_declaration: use_type . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 570
    unprefixed_use_declaration  go to state 706


State 645

  105 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations . '}'
  107 inline_use_declarations: inline_use_declarations . ',' inline_use_declaration

    ','  shift, and go to state 707
    '}'  shift, and go to state 708


State 646

  108 inline_use_declarations: inline_use_declaration .

    $default  reduce using rule 108 (inline_use_declarations)


State 647

  113 inline_use_declaration: unprefixed_use_declaration .

    $default  reduce using rule 113 (inline_use_declaration)


State 648

   81 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"
  104 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" . '{' unprefixed_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 386
    '{'                      shift, and go to state 709


State 649

  103 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' . unprefixed_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name               go to state 570
    unprefixed_use_declarations  go to state 710
    unprefixed_use_declaration   go to state 711


State 650

  159 unset_variables: unset_variables ',' unset_variable .

    $default  reduce using rule 159 (unset_variables)


State 651

  144 statement: "unset (T_UNSET)" '(' unset_variables ')' ';' .

    $default  reduce using rule 144 (statement)


State 652

  490 isset_variables: isset_variables ',' isset_variable .

    $default  reduce using rule 490 (isset_variables)


State 653

  179 extends_from: "extends (T_EXTENDS)" name .

    $default  reduce using rule 179 (extends_from)


State 654

  183 implements_list: "implements (T_IMPLEMENTS)" . name_list

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 657
    name_list       go to state 712


State 655

  169 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 713


State 656

  175 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 239 (class_statement_list)

    class_statement_list  go to state 714


State 657

  244 name_list: name .

    $default  reduce using rule 244 (name_list)


State 658

  181 interface_extends_list: "extends (T_EXTENDS)" name_list .
  245 name_list: name_list . ',' name

    ','  shift, and go to state 715

    $default  reduce using rule 181 (interface_extends_list)


State 659

  177 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 716


State 660

  455 assignment_list: assignment_list . ',' assignment_list_element
  458 assignment_list_element: "list (T_LIST)" '(' assignment_list . ')'

    ','  shift, and go to state 585
    ')'  shift, and go to state 717


State 661

  455 assignment_list: assignment_list ',' assignment_list_element .

    $default  reduce using rule 455 (assignment_list)


State 662

  294 expr_without_variable: "list (T_LIST)" '(' assignment_list ')' '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 718
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 663

  473 encaps_var: "variable (T_VARIABLE)" '[' encaps_var_offset ']' .

    $default  reduce using rule 473 (encaps_var)


State 664

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr
  477 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr . ']' '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ']'                           shift, and go to state 719


State 665

   78 top_statement_list: top_statement_list . top_statement
   93 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 '{' top_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "const (T_CONST)"                             shift, and go to state 51
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "use (T_USE)"                                 shift, and go to state 55
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 60
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 74
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 720
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    top_statement                    go to state 85
    statement                        go to state 86
    function_declaration_statement   go to state 87
    class_declaration_statement      go to state 88
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 91
    interface_declaration_statement  go to state 92
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 666

   95 top_statement: "namespace (T_NAMESPACE)" $@2 '{' top_statement_list '}' .

    $default  reduce using rule 95 (top_statement)


State 667

  128 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 721


State 668

  228 non_empty_argument_list: non_empty_argument_list ',' argument .

    $default  reduce using rule 228 (non_empty_argument_list)


State 669

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from . implements_list backup_doc_comment '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 654

    $default  reduce using rule 182 (implements_list)

    implements_list  go to state 722


State 670

  205 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' . statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 723
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 671

  209 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' . ':' inner_statement_list

    ':'  shift, and go to state 724


State 672

  211 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" ':' inner_statement_list "endif (T_ENDIF)" . ';'

    ';'  shift, and go to state 725


State 673

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment '(' . parameter_list ')' return_type '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 674
    "callable (T_CALLABLE)"    shift, and go to state 675
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    ')'       reduce using rule 213 (parameter_list)
    $default  reduce using rule 218 (optional_type)

    namespace_name            go to state 83
    name                      go to state 676
    parameter_list            go to state 726
    non_empty_parameter_list  go to state 678
    parameter                 go to state 679
    optional_type             go to state 680
    type                      go to state 681


State 674

  220 type: "array (T_ARRAY)" .

    $default  reduce using rule 220 (type)


State 675

  221 type: "callable (T_CALLABLE)" .

    $default  reduce using rule 221 (type)


State 676

  222 type: name .

    $default  reduce using rule 222 (type)


State 677

  367 expr_without_variable: function returns_ref backup_doc_comment '(' parameter_list . ')' lexical_vars return_type '{' inner_statement_list '}'

    ')'  shift, and go to state 727


State 678

  212 parameter_list: non_empty_parameter_list .
  215 non_empty_parameter_list: non_empty_parameter_list . ',' parameter

    ','  shift, and go to state 728

    $default  reduce using rule 212 (parameter_list)


State 679

  214 non_empty_parameter_list: parameter .

    $default  reduce using rule 214 (non_empty_parameter_list)


State 680

  216 parameter: optional_type . is_reference is_variadic "variable (T_VARIABLE)"
  217          | optional_type . is_reference is_variadic "variable (T_VARIABLE)" '=' expr

    '&'  shift, and go to state 729

    $default  reduce using rule 162 (is_reference)

    is_reference  go to state 730


State 681

  219 optional_type: type .

    $default  reduce using rule 219 (optional_type)


State 682

  450 member_name: '{' expr '}' .

    $default  reduce using rule 450 (member_name)


State 683

  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  347                      | expr '?' expr ':' expr .
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 347 (expr_without_variable)


State 684

  453 property_name: '{' expr '}' .

    $default  reduce using rule 453 (property_name)


State 685

  291 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 731


State 686

  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment '(' parameter_list . ')' lexical_vars return_type '{' inner_statement_list '}'

    ')'  shift, and go to state 732


State 687

  121 inner_statement_list: inner_statement_list . inner_statement
  208 alt_if_stmt_without_else: "if (T_IF)" '(' expr ')' ':' inner_statement_list .

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 208 (alt_if_stmt_without_else)

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 688

  133 statement: "do (T_DO)" statement "while (T_WHILE)" '(' expr ')' . ';'

    ';'  shift, and go to state 733


State 689

  121 inner_statement_list: inner_statement_list . inner_statement
  203 while_statement: ':' inner_statement_list . "endwhile (T_ENDWHILE)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "endwhile (T_ENDWHILE)"                       shift, and go to state 734
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 690

  134 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs ';' . for_exprs ')' for_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 286 (for_exprs)

    namespace_name              go to state 83
    name                        go to state 84
    for_exprs                   go to state 735
    non_empty_for_exprs         go to state 317
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 318
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 691

  185 foreach_variable: '&' variable .
  423 dereferencable: variable .

    "=> (T_DOUBLE_ARROW)"  reduce using rule 185 (foreach_variable)
    ')'                    reduce using rule 185 (foreach_variable)
    $default               reduce using rule 423 (dereferencable)


State 692

  186 foreach_variable: "list (T_LIST)" '(' . assignment_list ')'

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 355
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    $default  reduce using rule 459 (assignment_list_element)

    namespace_name           go to state 83
    name                     go to state 84
    function_call            go to state 100
    class_name               go to state 101
    dereferencable_scalar    go to state 132
    constant                 go to state 133
    variable_class_name      go to state 106
    dereferencable           go to state 107
    callable_expr            go to state 108
    callable_variable        go to state 109
    variable                 go to state 356
    simple_variable          go to state 111
    static_member            go to state 112
    assignment_list          go to state 736
    assignment_list_element  go to state 358


State 693

  146 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" . foreach_variable ')' foreach_statement

    '&'                                           shift, and go to state 634
    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 635
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    foreach_variable       go to state 737
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 637
    simple_variable        go to state 111
    static_member          go to state 112


State 694

  145 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable ')' . foreach_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 738
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 739
    foreach_statement           go to state 740
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 695

  192 declare_statement: ':' . inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 741


State 696

  191 declare_statement: statement .

    $default  reduce using rule 191 (declare_statement)


State 697

  148 statement: "declare (T_DECLARE)" '(' const_list ')' $@3 declare_statement .

    $default  reduce using rule 148 (statement)


State 698

  196 switch_case_list: ':' ';' . case_list "endswitch (T_ENDSWITCH)" ';'

    $default  reduce using rule 197 (case_list)

    case_list  go to state 742


State 699

  195 switch_case_list: ':' case_list . "endswitch (T_ENDSWITCH)" ';'
  198 case_list: case_list . "case (T_CASE)" expr case_separator inner_statement_list
  199          | case_list . "default (T_DEFAULT)" case_separator inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 743
    "case (T_CASE)"            shift, and go to state 744
    "default (T_DEFAULT)"      shift, and go to state 745


State 700

  194 switch_case_list: '{' ';' . case_list '}'

    $default  reduce using rule 197 (case_list)

    case_list  go to state 746


State 701

  193 switch_case_list: '{' case_list . '}'
  198 case_list: case_list . "case (T_CASE)" expr case_separator inner_statement_list
  199          | case_list . "default (T_DEFAULT)" case_separator inner_statement_list

    "case (T_CASE)"        shift, and go to state 744
    "default (T_DEFAULT)"  shift, and go to state 745
    '}'                    shift, and go to state 747


State 702

  155 catch_list: catch_list "catch (T_CATCH)" . '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

    '('  shift, and go to state 748


State 703

  157 finally_statement: "finally (T_FINALLY)" . '{' inner_statement_list '}'

    '{'  shift, and go to state 749


State 704

  150 statement: "try (T_TRY)" '{' inner_statement_list '}' catch_list finally_statement .

    $default  reduce using rule 150 (statement)


State 705

  106 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations . '}'
  107 inline_use_declarations: inline_use_declarations . ',' inline_use_declaration

    ','  shift, and go to state 707
    '}'  shift, and go to state 750


State 706

  114 inline_use_declaration: use_type unprefixed_use_declaration .

    $default  reduce using rule 114 (inline_use_declaration)


State 707

  107 inline_use_declarations: inline_use_declarations ',' . inline_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115
    "function (T_FUNCTION)"  shift, and go to state 184
    "const (T_CONST)"        shift, and go to state 185

    namespace_name              go to state 570
    use_type                    go to state 644
    inline_use_declaration      go to state 751
    unprefixed_use_declaration  go to state 647


State 708

  105 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}' .

    $default  reduce using rule 105 (mixed_group_use_declaration)


State 709

  104 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' . unprefixed_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name               go to state 570
    unprefixed_use_declarations  go to state 752
    unprefixed_use_declaration   go to state 711


State 710

  103 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations . '}'
  109 unprefixed_use_declarations: unprefixed_use_declarations . ',' unprefixed_use_declaration

    ','  shift, and go to state 753
    '}'  shift, and go to state 754


State 711

  110 unprefixed_use_declarations: unprefixed_use_declaration .

    $default  reduce using rule 110 (unprefixed_use_declarations)


State 712

  183 implements_list: "implements (T_IMPLEMENTS)" name_list .
  245 name_list: name_list . ',' name

    ','  shift, and go to state 715

    $default  reduce using rule 183 (implements_list)


State 713

  169 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 755


State 714

  175 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment '{' class_statement_list . '}'
  238 class_statement_list: class_statement_list . class_statement

    "static (T_STATIC)"        shift, and go to state 756
    "abstract (T_ABSTRACT)"    shift, and go to state 757
    "final (T_FINAL)"          shift, and go to state 758
    "private (T_PRIVATE)"      shift, and go to state 759
    "protected (T_PROTECTED)"  shift, and go to state 760
    "public (T_PUBLIC)"        shift, and go to state 761
    "const (T_CONST)"          shift, and go to state 762
    "use (T_USE)"              shift, and go to state 763
    "var (T_VAR)"              shift, and go to state 764
    '}'                        shift, and go to state 765

    $default  reduce using rule 265 (method_modifiers)

    class_statement             go to state 766
    variable_modifiers          go to state 767
    method_modifiers            go to state 768
    non_empty_member_modifiers  go to state 769
    member_modifier             go to state 770


State 715

  245 name_list: name_list ',' . name

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 771


State 716

  177 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 239 (class_statement_list)

    class_statement_list  go to state 772


State 717

  458 assignment_list_element: "list (T_LIST)" '(' assignment_list ')' .

    $default  reduce using rule 458 (assignment_list_element)


State 718

  294 expr_without_variable: "list (T_LIST)" '(' assignment_list ')' '=' expr .
  314                      | expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 294 (expr_without_variable)


State 719

  477 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' . '}'

    '}'  shift, and go to state 773


State 720

   93 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 '{' top_statement_list '}' .

    $default  reduce using rule 93 (top_statement)


State 721

  128 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 128 (inner_statement)


State 722

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 774


State 723

  205 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' statement .

    $default  reduce using rule 205 (if_stmt_without_else)


State 724

  209 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' ':' . inner_statement_list

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 775


State 725

  211 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" ':' inner_statement_list "endif (T_ENDIF)" ';' .

    $default  reduce using rule 211 (alt_if_stmt)


State 726

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment '(' parameter_list . ')' return_type '{' inner_statement_list '}'

    ')'  shift, and go to state 776


State 727

  367 expr_without_variable: function returns_ref backup_doc_comment '(' parameter_list ')' . lexical_vars return_type '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 777

    $default  reduce using rule 373 (lexical_vars)

    lexical_vars  go to state 778


State 728

  215 non_empty_parameter_list: non_empty_parameter_list ',' . parameter

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 674
    "callable (T_CALLABLE)"    shift, and go to state 675
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    $default  reduce using rule 218 (optional_type)

    namespace_name  go to state 83
    name            go to state 676
    parameter       go to state 779
    optional_type   go to state 680
    type            go to state 681


State 729

  163 is_reference: '&' .

    $default  reduce using rule 163 (is_reference)


State 730

  216 parameter: optional_type is_reference . is_variadic "variable (T_VARIABLE)"
  217          | optional_type is_reference . is_variadic "variable (T_VARIABLE)" '=' expr

    "... (T_ELLIPSIS)"  shift, and go to state 780

    $default  reduce using rule 164 (is_variadic)

    is_variadic  go to state 781


State 731

  291 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 782


State 732

  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment '(' parameter_list ')' . lexical_vars return_type '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 777

    $default  reduce using rule 373 (lexical_vars)

    lexical_vars  go to state 783


State 733

  133 statement: "do (T_DO)" statement "while (T_WHILE)" '(' expr ')' ';' .

    $default  reduce using rule 133 (statement)


State 734

  203 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" . ';'

    ';'  shift, and go to state 784


State 735

  134 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs ';' for_exprs . ')' for_statement

    ')'  shift, and go to state 785


State 736

  186 foreach_variable: "list (T_LIST)" '(' assignment_list . ')'
  455 assignment_list: assignment_list . ',' assignment_list_element

    ','  shift, and go to state 585
    ')'  shift, and go to state 786


State 737

  146 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable . ')' foreach_statement

    ')'  shift, and go to state 787


State 738

  190 foreach_statement: ':' . inner_statement_list "endforeach (T_ENDFOREACH)" ';'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 788


State 739

  189 foreach_statement: statement .

    $default  reduce using rule 189 (foreach_statement)


State 740

  145 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable ')' foreach_statement .

    $default  reduce using rule 145 (statement)


State 741

  121 inner_statement_list: inner_statement_list . inner_statement
  192 declare_statement: ':' inner_statement_list . "enddeclare (T_ENDDECLARE)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "enddeclare (T_ENDDECLARE)"                   shift, and go to state 789
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 742

  196 switch_case_list: ':' ';' case_list . "endswitch (T_ENDSWITCH)" ';'
  198 case_list: case_list . "case (T_CASE)" expr case_separator inner_statement_list
  199          | case_list . "default (T_DEFAULT)" case_separator inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 790
    "case (T_CASE)"            shift, and go to state 744
    "default (T_DEFAULT)"      shift, and go to state 745


State 743

  195 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 791


State 744

  198 case_list: case_list "case (T_CASE)" . expr case_separator inner_statement_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 792
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 745

  199 case_list: case_list "default (T_DEFAULT)" . case_separator inner_statement_list

    ':'  shift, and go to state 793
    ';'  shift, and go to state 794

    case_separator  go to state 795


State 746

  194 switch_case_list: '{' ';' case_list . '}'
  198 case_list: case_list . "case (T_CASE)" expr case_separator inner_statement_list
  199          | case_list . "default (T_DEFAULT)" case_separator inner_statement_list

    "case (T_CASE)"        shift, and go to state 744
    "default (T_DEFAULT)"  shift, and go to state 745
    '}'                    shift, and go to state 796


State 747

  193 switch_case_list: '{' case_list '}' .

    $default  reduce using rule 193 (switch_case_list)


State 748

  155 catch_list: catch_list "catch (T_CATCH)" '(' . name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 797


State 749

  157 finally_statement: "finally (T_FINALLY)" '{' . inner_statement_list '}'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 798


State 750

  106 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}' .

    $default  reduce using rule 106 (mixed_group_use_declaration)


State 751

  107 inline_use_declarations: inline_use_declarations ',' inline_use_declaration .

    $default  reduce using rule 107 (inline_use_declarations)


State 752

  104 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations . '}'
  109 unprefixed_use_declarations: unprefixed_use_declarations . ',' unprefixed_use_declaration

    ','  shift, and go to state 753
    '}'  shift, and go to state 799


State 753

  109 unprefixed_use_declarations: unprefixed_use_declarations ',' . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 570
    unprefixed_use_declaration  go to state 800


State 754

  103 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}' .

    $default  reduce using rule 103 (group_use_declaration)


State 755

  169 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 239 (class_statement_list)

    class_statement_list  go to state 801


State 756

  272 member_modifier: "static (T_STATIC)" .

    $default  reduce using rule 272 (member_modifier)


State 757

  273 member_modifier: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 273 (member_modifier)


State 758

  274 member_modifier: "final (T_FINAL)" .

    $default  reduce using rule 274 (member_modifier)


State 759

  271 member_modifier: "private (T_PRIVATE)" .

    $default  reduce using rule 271 (member_modifier)


State 760

  270 member_modifier: "protected (T_PROTECTED)" .

    $default  reduce using rule 270 (member_modifier)


State 761

  269 member_modifier: "public (T_PUBLIC)" .

    $default  reduce using rule 269 (member_modifier)


State 762

  241 class_statement: "const (T_CONST)" . class_const_list ';'

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 472
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473

    reserved_non_modifiers  go to state 475
    semi_reserved           go to state 476
    identifier              go to state 802
    class_const_list        go to state 803
    class_const_decl        go to state 804


State 763

  242 class_statement: "use (T_USE)" . name_list trait_adaptations

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 657
    name_list       go to state 805


State 764

  264 variable_modifiers: "var (T_VAR)" .

    $default  reduce using rule 264 (variable_modifiers)


State 765

  175 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 175 (trait_declaration_statement)


State 766

  238 class_statement_list: class_statement_list class_statement .

    $default  reduce using rule 238 (class_statement_list)


State 767

  240 class_statement: variable_modifiers . property_list ';'

    "variable (T_VARIABLE)"  shift, and go to state 806

    property_list  go to state 807
    property       go to state 808


State 768

  243 class_statement: method_modifiers . function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type method_body

    "function (T_FUNCTION)"  shift, and go to state 50

    function  go to state 809


State 769

  263 variable_modifiers: non_empty_member_modifiers .
  266 method_modifiers: non_empty_member_modifiers .
  268 non_empty_member_modifiers: non_empty_member_modifiers . member_modifier

    "static (T_STATIC)"        shift, and go to state 756
    "abstract (T_ABSTRACT)"    shift, and go to state 757
    "final (T_FINAL)"          shift, and go to state 758
    "private (T_PRIVATE)"      shift, and go to state 759
    "protected (T_PROTECTED)"  shift, and go to state 760
    "public (T_PUBLIC)"        shift, and go to state 761

    "function (T_FUNCTION)"  reduce using rule 266 (method_modifiers)
    $default                 reduce using rule 263 (variable_modifiers)

    member_modifier  go to state 810


State 770

  267 non_empty_member_modifiers: member_modifier .

    $default  reduce using rule 267 (non_empty_member_modifiers)


State 771

  245 name_list: name_list ',' name .

    $default  reduce using rule 245 (name_list)


State 772

  177 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list . '}'
  238 class_statement_list: class_statement_list . class_statement

    "static (T_STATIC)"        shift, and go to state 756
    "abstract (T_ABSTRACT)"    shift, and go to state 757
    "final (T_FINAL)"          shift, and go to state 758
    "private (T_PRIVATE)"      shift, and go to state 759
    "protected (T_PROTECTED)"  shift, and go to state 760
    "public (T_PUBLIC)"        shift, and go to state 761
    "const (T_CONST)"          shift, and go to state 762
    "use (T_USE)"              shift, and go to state 763
    "var (T_VAR)"              shift, and go to state 764
    '}'                        shift, and go to state 811

    $default  reduce using rule 265 (method_modifiers)

    class_statement             go to state 766
    variable_modifiers          go to state 767
    method_modifiers            go to state 768
    non_empty_member_modifiers  go to state 769
    member_modifier             go to state 770


State 773

  477 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}' .

    $default  reduce using rule 477 (encaps_var)


State 774

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 812


State 775

  121 inner_statement_list: inner_statement_list . inner_statement
  209 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' ':' inner_statement_list .

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 209 (alt_if_stmt_without_else)

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 776

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment '(' parameter_list ')' . return_type '{' inner_statement_list '}'

    ':'  shift, and go to state 813

    $default  reduce using rule 223 (return_type)

    return_type  go to state 814


State 777

  374 lexical_vars: "use (T_USE)" . '(' lexical_var_list ')'

    '('  shift, and go to state 815


State 778

  367 expr_without_variable: function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars . return_type '{' inner_statement_list '}'

    ':'  shift, and go to state 813

    $default  reduce using rule 223 (return_type)

    return_type  go to state 816


State 779

  215 non_empty_parameter_list: non_empty_parameter_list ',' parameter .

    $default  reduce using rule 215 (non_empty_parameter_list)


State 780

  165 is_variadic: "... (T_ELLIPSIS)" .

    $default  reduce using rule 165 (is_variadic)


State 781

  216 parameter: optional_type is_reference is_variadic . "variable (T_VARIABLE)"
  217          | optional_type is_reference is_variadic . "variable (T_VARIABLE)" '=' expr

    "variable (T_VARIABLE)"  shift, and go to state 817


State 782

  291 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 239 (class_statement_list)

    class_statement_list  go to state 818


State 783

  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars . return_type '{' inner_statement_list '}'

    ':'  shift, and go to state 813

    $default  reduce using rule 223 (return_type)

    return_type  go to state 819


State 784

  203 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" ';' .

    $default  reduce using rule 203 (while_statement)


State 785

  134 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs ';' for_exprs ')' . for_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 820
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 821
    for_statement               go to state 822
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 786

  186 foreach_variable: "list (T_LIST)" '(' assignment_list ')' .

    $default  reduce using rule 186 (foreach_variable)


State 787

  146 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' . foreach_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 738
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 739
    foreach_statement           go to state 823
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 788

  121 inner_statement_list: inner_statement_list . inner_statement
  190 foreach_statement: ':' inner_statement_list . "endforeach (T_ENDFOREACH)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "endforeach (T_ENDFOREACH)"                   shift, and go to state 824
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 789

  192 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" . ';'

    ';'  shift, and go to state 825


State 790

  196 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 826


State 791

  195 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 195 (switch_case_list)


State 792

  198 case_list: case_list "case (T_CASE)" expr . case_separator inner_statement_list
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    ':'                           shift, and go to state 793
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ';'                           shift, and go to state 794

    case_separator  go to state 827


State 793

  200 case_separator: ':' .

    $default  reduce using rule 200 (case_separator)


State 794

  201 case_separator: ';' .

    $default  reduce using rule 201 (case_separator)


State 795

  199 case_list: case_list "default (T_DEFAULT)" case_separator . inner_statement_list

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 828


State 796

  194 switch_case_list: '{' ';' case_list '}' .

    $default  reduce using rule 194 (switch_case_list)


State 797

  155 catch_list: catch_list "catch (T_CATCH)" '(' name . "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

    "variable (T_VARIABLE)"  shift, and go to state 829


State 798

  121 inner_statement_list: inner_statement_list . inner_statement
  157 finally_statement: "finally (T_FINALLY)" '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 830
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 799

  104 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}' .

    $default  reduce using rule 104 (group_use_declaration)


State 800

  109 unprefixed_use_declarations: unprefixed_use_declarations ',' unprefixed_use_declaration .

    $default  reduce using rule 109 (unprefixed_use_declarations)


State 801

  169 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list . '}'
  238 class_statement_list: class_statement_list . class_statement

    "static (T_STATIC)"        shift, and go to state 756
    "abstract (T_ABSTRACT)"    shift, and go to state 757
    "final (T_FINAL)"          shift, and go to state 758
    "private (T_PRIVATE)"      shift, and go to state 759
    "protected (T_PROTECTED)"  shift, and go to state 760
    "public (T_PUBLIC)"        shift, and go to state 761
    "const (T_CONST)"          shift, and go to state 762
    "use (T_USE)"              shift, and go to state 763
    "var (T_VAR)"              shift, and go to state 764
    '}'                        shift, and go to state 831

    $default  reduce using rule 265 (method_modifiers)

    class_statement             go to state 766
    variable_modifiers          go to state 767
    method_modifiers            go to state 768
    non_empty_member_modifiers  go to state 769
    member_modifier             go to state 770


State 802

  281 class_const_decl: identifier . '=' expr

    '='  shift, and go to state 832


State 803

  241 class_statement: "const (T_CONST)" class_const_list . ';'
  279 class_const_list: class_const_list . ',' class_const_decl

    ','  shift, and go to state 833
    ';'  shift, and go to state 834


State 804

  280 class_const_list: class_const_decl .

    $default  reduce using rule 280 (class_const_list)


State 805

  242 class_statement: "use (T_USE)" name_list . trait_adaptations
  245 name_list: name_list . ',' name

    ','  shift, and go to state 715
    ';'  shift, and go to state 835
    '{'  shift, and go to state 836

    trait_adaptations  go to state 837


State 806

  277 property: "variable (T_VARIABLE)" . backup_doc_comment
  278         | "variable (T_VARIABLE)" . '=' expr backup_doc_comment

    '='  shift, and go to state 838

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 839


State 807

  240 class_statement: variable_modifiers property_list . ';'
  275 property_list: property_list . ',' property

    ','  shift, and go to state 840
    ';'  shift, and go to state 841


State 808

  276 property_list: property .

    $default  reduce using rule 276 (property_list)


State 809

  243 class_statement: method_modifiers function . returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type method_body

    '&'  shift, and go to state 235

    $default  reduce using rule 371 (returns_ref)

    returns_ref  go to state 842


State 810

  268 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .

    $default  reduce using rule 268 (non_empty_member_modifiers)


State 811

  177 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 177 (interface_declaration_statement)


State 812

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 239 (class_statement_list)

    class_statement_list  go to state 843


State 813

  224 return_type: ':' . type

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 674
    "callable (T_CALLABLE)"    shift, and go to state 675
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 676
    type            go to state 844


State 814

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment '(' parameter_list ')' return_type . '{' inner_statement_list '}'

    '{'  shift, and go to state 845


State 815

  374 lexical_vars: "use (T_USE)" '(' . lexical_var_list ')'

    '&'                      shift, and go to state 846
    "variable (T_VARIABLE)"  shift, and go to state 847

    lexical_var_list  go to state 848
    lexical_var       go to state 849


State 816

  367 expr_without_variable: function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type . '{' inner_statement_list '}'

    '{'  shift, and go to state 850


State 817

  216 parameter: optional_type is_reference is_variadic "variable (T_VARIABLE)" .
  217          | optional_type is_reference is_variadic "variable (T_VARIABLE)" . '=' expr

    '='  shift, and go to state 851

    $default  reduce using rule 216 (parameter)


State 818

  238 class_statement_list: class_statement_list . class_statement
  291 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list . '}'

    "static (T_STATIC)"        shift, and go to state 756
    "abstract (T_ABSTRACT)"    shift, and go to state 757
    "final (T_FINAL)"          shift, and go to state 758
    "private (T_PRIVATE)"      shift, and go to state 759
    "protected (T_PROTECTED)"  shift, and go to state 760
    "public (T_PUBLIC)"        shift, and go to state 761
    "const (T_CONST)"          shift, and go to state 762
    "use (T_USE)"              shift, and go to state 763
    "var (T_VAR)"              shift, and go to state 764
    '}'                        shift, and go to state 852

    $default  reduce using rule 265 (method_modifiers)

    class_statement             go to state 766
    variable_modifiers          go to state 767
    method_modifiers            go to state 768
    non_empty_member_modifiers  go to state 769
    member_modifier             go to state 770


State 819

  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type . '{' inner_statement_list '}'

    '{'  shift, and go to state 853


State 820

  188 for_statement: ':' . inner_statement_list "endfor (T_ENDFOR)" ';'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 854


State 821

  187 for_statement: statement .

    $default  reduce using rule 187 (for_statement)


State 822

  134 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs ';' for_exprs ')' for_statement .

    $default  reduce using rule 134 (statement)


State 823

  146 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement .

    $default  reduce using rule 146 (statement)


State 824

  190 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" . ';'

    ';'  shift, and go to state 855


State 825

  192 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';' .

    $default  reduce using rule 192 (declare_statement)


State 826

  196 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 196 (switch_case_list)


State 827

  198 case_list: case_list "case (T_CASE)" expr case_separator . inner_statement_list

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 856


State 828

  121 inner_statement_list: inner_statement_list . inner_statement
  199 case_list: case_list "default (T_DEFAULT)" case_separator inner_statement_list .

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 199 (case_list)

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 829

  155 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" . ')' '{' inner_statement_list '}'

    ')'  shift, and go to state 857


State 830

  157 finally_statement: "finally (T_FINALLY)" '{' inner_statement_list '}' .

    $default  reduce using rule 157 (finally_statement)


State 831

  169 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 169 (class_declaration_statement)


State 832

  281 class_const_decl: identifier '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 858
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 833

  279 class_const_list: class_const_list ',' . class_const_decl

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 472
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473

    reserved_non_modifiers  go to state 475
    semi_reserved           go to state 476
    identifier              go to state 802
    class_const_decl        go to state 859


State 834

  241 class_statement: "const (T_CONST)" class_const_list ';' .

    $default  reduce using rule 241 (class_statement)


State 835

  246 trait_adaptations: ';' .

    $default  reduce using rule 246 (trait_adaptations)


State 836

  247 trait_adaptations: '{' . '}'
  248                  | '{' . trait_adaptation_list '}'

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 860
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 861
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473
    "\\ (T_NS_SEPARATOR)"            shift, and go to state 76
    '}'                              shift, and go to state 862

    reserved_non_modifiers           go to state 475
    semi_reserved                    go to state 476
    identifier                       go to state 863
    namespace_name                   go to state 83
    name                             go to state 864
    trait_adaptation_list            go to state 865
    trait_adaptation                 go to state 866
    trait_precedence                 go to state 867
    trait_alias                      go to state 868
    trait_method_reference           go to state 869
    absolute_trait_method_reference  go to state 870


State 837

  242 class_statement: "use (T_USE)" name_list trait_adaptations .

    $default  reduce using rule 242 (class_statement)


State 838

  278 property: "variable (T_VARIABLE)" '=' . expr backup_doc_comment

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 871
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 839

  277 property: "variable (T_VARIABLE)" backup_doc_comment .

    $default  reduce using rule 277 (property)


State 840

  275 property_list: property_list ',' . property

    "variable (T_VARIABLE)"  shift, and go to state 806

    property  go to state 872


State 841

  240 class_statement: variable_modifiers property_list ';' .

    $default  reduce using rule 240 (class_statement)


State 842

  243 class_statement: method_modifiers function returns_ref . identifier backup_doc_comment '(' parameter_list ')' return_type method_body

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 472
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473

    reserved_non_modifiers  go to state 475
    semi_reserved           go to state 476
    identifier              go to state 873


State 843

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list . '}'
  238 class_statement_list: class_statement_list . class_statement

    "static (T_STATIC)"        shift, and go to state 756
    "abstract (T_ABSTRACT)"    shift, and go to state 757
    "final (T_FINAL)"          shift, and go to state 758
    "private (T_PRIVATE)"      shift, and go to state 759
    "protected (T_PROTECTED)"  shift, and go to state 760
    "public (T_PUBLIC)"        shift, and go to state 761
    "const (T_CONST)"          shift, and go to state 762
    "use (T_USE)"              shift, and go to state 763
    "var (T_VAR)"              shift, and go to state 764
    '}'                        shift, and go to state 874

    $default  reduce using rule 265 (method_modifiers)

    class_statement             go to state 766
    variable_modifiers          go to state 767
    method_modifiers            go to state 768
    non_empty_member_modifiers  go to state 769
    member_modifier             go to state 770


State 844

  224 return_type: ':' type .

    $default  reduce using rule 224 (return_type)


State 845

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment '(' parameter_list ')' return_type '{' . inner_statement_list '}'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 875


State 846

  378 lexical_var: '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  shift, and go to state 876


State 847

  377 lexical_var: "variable (T_VARIABLE)" .

    $default  reduce using rule 377 (lexical_var)


State 848

  374 lexical_vars: "use (T_USE)" '(' lexical_var_list . ')'
  375 lexical_var_list: lexical_var_list . ',' lexical_var

    ','  shift, and go to state 877
    ')'  shift, and go to state 878


State 849

  376 lexical_var_list: lexical_var .

    $default  reduce using rule 376 (lexical_var_list)


State 850

  367 expr_without_variable: function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' . inner_statement_list '}'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 879


State 851

  217 parameter: optional_type is_reference is_variadic "variable (T_VARIABLE)" '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 880
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 852

  291 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 291 (anonymous_class)


State 853

  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' . inner_statement_list '}'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 881


State 854

  121 inner_statement_list: inner_statement_list . inner_statement
  188 for_statement: ':' inner_statement_list . "endfor (T_ENDFOR)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "endfor (T_ENDFOR)"                           shift, and go to state 882
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 855

  190 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';' .

    $default  reduce using rule 190 (foreach_statement)


State 856

  121 inner_statement_list: inner_statement_list . inner_statement
  198 case_list: case_list "case (T_CASE)" expr case_separator inner_statement_list .

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 198 (case_list)

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 857

  155 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' . '{' inner_statement_list '}'

    '{'  shift, and go to state 883


State 858

  281 class_const_decl: identifier '=' expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 281 (class_const_decl)


State 859

  279 class_const_list: class_const_list ',' class_const_decl .

    $default  reduce using rule 279 (class_const_list)


State 860

   76 identifier: "identifier (T_STRING)" .
   80 namespace_name: "identifier (T_STRING)" .

    "as (T_AS)"  reduce using rule 76 (identifier)
    $default     reduce using rule 80 (namespace_name)


State 861

   57 reserved_non_modifiers: "namespace (T_NAMESPACE)" .
   83 name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 212

    $default  reduce using rule 57 (reserved_non_modifiers)


State 862

  247 trait_adaptations: '{' '}' .

    $default  reduce using rule 247 (trait_adaptations)


State 863

  258 trait_method_reference: identifier .

    $default  reduce using rule 258 (trait_method_reference)


State 864

  260 absolute_trait_method_reference: name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 884


State 865

  248 trait_adaptations: '{' trait_adaptation_list . '}'
  250 trait_adaptation_list: trait_adaptation_list . trait_adaptation

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 860
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 861
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473
    "\\ (T_NS_SEPARATOR)"            shift, and go to state 76
    '}'                              shift, and go to state 885

    reserved_non_modifiers           go to state 475
    semi_reserved                    go to state 476
    identifier                       go to state 863
    namespace_name                   go to state 83
    name                             go to state 864
    trait_adaptation                 go to state 886
    trait_precedence                 go to state 867
    trait_alias                      go to state 868
    trait_method_reference           go to state 869
    absolute_trait_method_reference  go to state 870


State 866

  249 trait_adaptation_list: trait_adaptation .

    $default  reduce using rule 249 (trait_adaptation_list)


State 867

  251 trait_adaptation: trait_precedence . ';'

    ';'  shift, and go to state 887


State 868

  252 trait_adaptation: trait_alias . ';'

    ';'  shift, and go to state 888


State 869

  254 trait_alias: trait_method_reference . "as (T_AS)" "identifier (T_STRING)"
  255            | trait_method_reference . "as (T_AS)" reserved_non_modifiers
  256            | trait_method_reference . "as (T_AS)" member_modifier identifier
  257            | trait_method_reference . "as (T_AS)" member_modifier

    "as (T_AS)"  shift, and go to state 889


State 870

  253 trait_precedence: absolute_trait_method_reference . "insteadof (T_INSTEADOF)" name_list
  259 trait_method_reference: absolute_trait_method_reference .

    "insteadof (T_INSTEADOF)"  shift, and go to state 890

    $default  reduce using rule 259 (trait_method_reference)


State 871

  278 property: "variable (T_VARIABLE)" '=' expr . backup_doc_comment
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 891


State 872

  275 property_list: property_list ',' property .

    $default  reduce using rule 275 (property_list)


State 873

  243 class_statement: method_modifiers function returns_ref identifier . backup_doc_comment '(' parameter_list ')' return_type method_body

    $default  reduce using rule 370 (backup_doc_comment)

    backup_doc_comment  go to state 892


State 874

  167 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 167 (class_declaration_statement)


State 875

  121 inner_statement_list: inner_statement_list . inner_statement
  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment '(' parameter_list ')' return_type '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 893
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 876

  378 lexical_var: '&' "variable (T_VARIABLE)" .

    $default  reduce using rule 378 (lexical_var)


State 877

  375 lexical_var_list: lexical_var_list ',' . lexical_var

    '&'                      shift, and go to state 846
    "variable (T_VARIABLE)"  shift, and go to state 847

    lexical_var  go to state 894


State 878

  374 lexical_vars: "use (T_USE)" '(' lexical_var_list ')' .

    $default  reduce using rule 374 (lexical_vars)


State 879

  121 inner_statement_list: inner_statement_list . inner_statement
  367 expr_without_variable: function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 895
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 880

  217 parameter: optional_type is_reference is_variadic "variable (T_VARIABLE)" '=' expr .
  314 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  315                      | expr . "&& (T_BOOLEAN_AND)" expr
  316                      | expr . "or (T_LOGICAL_OR)" expr
  317                      | expr . "and (T_LOGICAL_AND)" expr
  318                      | expr . "xor (T_LOGICAL_XOR)" expr
  319                      | expr . '|' expr
  320                      | expr . '&' expr
  321                      | expr . '^' expr
  322                      | expr . '.' expr
  323                      | expr . '+' expr
  324                      | expr . '-' expr
  325                      | expr . '*' expr
  326                      | expr . "** (T_POW)" expr
  327                      | expr . '/' expr
  328                      | expr . '%' expr
  329                      | expr . "<< (T_SL)" expr
  330                      | expr . ">> (T_SR)" expr
  335                      | expr . "=== (T_IS_IDENTICAL)" expr
  336                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  337                      | expr . "== (T_IS_EQUAL)" expr
  338                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  339                      | expr . '<' expr
  340                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  341                      | expr . '>' expr
  342                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  343                      | expr . "<=> (T_SPACESHIP)" expr
  344                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  347                      | expr . '?' expr ':' expr
  348                      | expr . '?' ':' expr
  349                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 217 (parameter)


State 881

  121 inner_statement_list: inner_statement_list . inner_statement
  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 896
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 882

  188 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" . ';'

    ';'  shift, and go to state 897


State 883

  155 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' . inner_statement_list '}'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 898


State 884

  260 absolute_trait_method_reference: name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . identifier

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 472
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473

    reserved_non_modifiers  go to state 475
    semi_reserved           go to state 476
    identifier              go to state 899


State 885

  248 trait_adaptations: '{' trait_adaptation_list '}' .

    $default  reduce using rule 248 (trait_adaptations)


State 886

  250 trait_adaptation_list: trait_adaptation_list trait_adaptation .

    $default  reduce using rule 250 (trait_adaptation_list)


State 887

  251 trait_adaptation: trait_precedence ';' .

    $default  reduce using rule 251 (trait_adaptation)


State 888

  252 trait_adaptation: trait_alias ';' .

    $default  reduce using rule 252 (trait_adaptation)


State 889

  254 trait_alias: trait_method_reference "as (T_AS)" . "identifier (T_STRING)"
  255            | trait_method_reference "as (T_AS)" . reserved_non_modifiers
  256            | trait_method_reference "as (T_AS)" . member_modifier identifier
  257            | trait_method_reference "as (T_AS)" . member_modifier

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 756
    "abstract (T_ABSTRACT)"          shift, and go to state 757
    "final (T_FINAL)"                shift, and go to state 758
    "private (T_PRIVATE)"            shift, and go to state 759
    "protected (T_PROTECTED)"        shift, and go to state 760
    "public (T_PUBLIC)"              shift, and go to state 761
    "identifier (T_STRING)"          shift, and go to state 900
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 472
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473

    reserved_non_modifiers  go to state 901
    member_modifier         go to state 902


State 890

  253 trait_precedence: absolute_trait_method_reference "insteadof (T_INSTEADOF)" . name_list

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 657
    name_list       go to state 903


State 891

  278 property: "variable (T_VARIABLE)" '=' expr backup_doc_comment .

    $default  reduce using rule 278 (property)


State 892

  243 class_statement: method_modifiers function returns_ref identifier backup_doc_comment . '(' parameter_list ')' return_type method_body

    '('  shift, and go to state 904


State 893

  161 function_declaration_statement: function returns_ref "identifier (T_STRING)" backup_doc_comment '(' parameter_list ')' return_type '{' inner_statement_list '}' .

    $default  reduce using rule 161 (function_declaration_statement)


State 894

  375 lexical_var_list: lexical_var_list ',' lexical_var .

    $default  reduce using rule 375 (lexical_var_list)


State 895

  367 expr_without_variable: function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}' .

    $default  reduce using rule 367 (expr_without_variable)


State 896

  368 expr_without_variable: "static (T_STATIC)" function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type '{' inner_statement_list '}' .

    $default  reduce using rule 368 (expr_without_variable)


State 897

  188 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" ';' .

    $default  reduce using rule 188 (for_statement)


State 898

  121 inner_statement_list: inner_statement_list . inner_statement
  155 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 905
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 899

  260 absolute_trait_method_reference: name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier .

    $default  reduce using rule 260 (absolute_trait_method_reference)


State 900

  254 trait_alias: trait_method_reference "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 254 (trait_alias)


State 901

  255 trait_alias: trait_method_reference "as (T_AS)" reserved_non_modifiers .

    $default  reduce using rule 255 (trait_alias)


State 902

  256 trait_alias: trait_method_reference "as (T_AS)" member_modifier . identifier
  257            | trait_method_reference "as (T_AS)" member_modifier .

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "__LINE__ (T_LINE)"              shift, and go to state 465
    "__FILE__ (T_FILE)"              shift, and go to state 466
    "__DIR__ (T_DIR)"                shift, and go to state 467
    "__CLASS__ (T_CLASS_C)"          shift, and go to state 468
    "__TRAIT__ (T_TRAIT_C)"          shift, and go to state 469
    "__METHOD__ (T_METHOD_C)"        shift, and go to state 470
    "__FUNCTION__ (T_FUNC_C)"        shift, and go to state 471
    "namespace (T_NAMESPACE)"        shift, and go to state 472
    "__NAMESPACE__ (T_NS_C)"         shift, and go to state 473

    $default  reduce using rule 257 (trait_alias)

    reserved_non_modifiers  go to state 475
    semi_reserved           go to state 476
    identifier              go to state 906


State 903

  245 name_list: name_list . ',' name
  253 trait_precedence: absolute_trait_method_reference "insteadof (T_INSTEADOF)" name_list .

    ','  shift, and go to state 715

    $default  reduce using rule 253 (trait_precedence)


State 904

  243 class_statement: method_modifiers function returns_ref identifier backup_doc_comment '(' . parameter_list ')' return_type method_body

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 674
    "callable (T_CALLABLE)"    shift, and go to state 675
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    ')'       reduce using rule 213 (parameter_list)
    $default  reduce using rule 218 (optional_type)

    namespace_name            go to state 83
    name                      go to state 676
    parameter_list            go to state 907
    non_empty_parameter_list  go to state 678
    parameter                 go to state 679
    optional_type             go to state 680
    type                      go to state 681


State 905

  155 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}' .

    $default  reduce using rule 155 (catch_list)


State 906

  256 trait_alias: trait_method_reference "as (T_AS)" member_modifier identifier .

    $default  reduce using rule 256 (trait_alias)


State 907

  243 class_statement: method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list . ')' return_type method_body

    ')'  shift, and go to state 908


State 908

  243 class_statement: method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' . return_type method_body

    ':'  shift, and go to state 813

    $default  reduce using rule 223 (return_type)

    return_type  go to state 909


State 909

  243 class_statement: method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type . method_body

    ';'  shift, and go to state 910
    '{'  shift, and go to state 911

    method_body  go to state 912


State 910

  261 method_body: ';' .

    $default  reduce using rule 261 (method_body)


State 911

  262 method_body: '{' . inner_statement_list '}'

    $default  reduce using rule 122 (inner_statement_list)

    inner_statement_list  go to state 913


State 912

  243 class_statement: method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')' return_type method_body .

    $default  reduce using rule 243 (class_statement)


State 913

  121 inner_statement_list: inner_statement_list . inner_statement
  262 method_body: '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 914
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 914

  262 method_body: '{' inner_statement_list '}' .

    $default  reduce using rule 262 (method_body)
